<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000039c997de6b4ff60af34bc0aaeea9eb54e7b41396da8fecd401468f9f850fd449e874727ed2632ff1812be96018d8a42717198845642d55df56e6ad616b7b657115c169917b42fe578968151ba901e8575415bc19a72f345af399a103709f0c6aba6ad5d7dcdfc4eda26307ef2c2ca94f12219007209c403f8dcff3990a19becc" isAbstract="false" kind="Environment" name="Mesh2DImpl" packagePath="impl.common.topology">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000000f60c24592b695aa5c2a7e4b18ed1bf7173d5a20bda84d37ccea241dc87a5284c4e431a585b9b50ad967402188f23a68eb37684f17a730530f7f23755ed17619de143ba86bd6cce0c4068ee44ad528acd8a0b7965d8a9bde8d0cc4ff1d748d49fcde37774e1d413a4d7e6340689836bbdb7819990ef0f5943ed87a25f698a680" localRef="base" location="common.topology.Mesh2D/Mesh2D.hpe" name="Mesh2D" package="common.topology" version="1.0.0.0">
        <visualDescription h="30" w="50" x="219" y="159">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="x" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="30" w="50" x="197" y="289">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="y" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="30" w="50" x="278" y="236">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="cell">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="ICell2DImpl" nArgs="0">
      <slice isRef="y">
        <originRef cRef="y" iRef="ICell"/>
        <visualDescription h="10" w="10" x="66" y="3"/>
      </slice>
      <slice isRef="x">
        <originRef cRef="x" iRef="ICell"/>
        <visualDescription h="10" w="10" x="60" y="19"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.topology.Ring;&#xA;using common.topology.Mesh2D;&#xA;&#xA;namespace impl.common.topology.Mesh2DImpl { &#xA;&#xA;public abstract class BaseICell2DImpl: br.ufc.pargo.hpe.kinds.Environment, BaseICell2D&#xA;{&#xA;&#xA;private ICell x = null;&#xA;&#xA;public ICell X {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.x == null)&#xA;&#x9;&#x9;&#x9;this.x = (ICell) Services.getPort(&quot;x&quot;);&#xA;&#x9;&#x9;return this.x;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell y = null;&#xA;&#xA;public ICell Y {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.y == null)&#xA;&#x9;&#x9;&#x9;this.y = (ICell) Services.getPort(&quot;y&quot;);&#xA;&#x9;&#x9;return this.y;&#xA;&#x9;}&#xA;}&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseICell2DImpl.cs" srcType="base" uri="impl.common.topology.Mesh2DImpl/bin/1.0.0.0/BaseICell2DImpl.dll" versionId="1.0.0.0">
          <dependency>common.topology.Ring/bin/1.0.0.0/ICell.dll</dependency>
          <dependency>common.topology.Mesh2D/bin/1.0.0.0/BaseICell2D.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.topology.Mesh2D;&#xA;&#xA;namespace impl.common.topology.Mesh2DImpl { &#xA;&#xA;public class ICell2DImpl : BaseICell2DImpl, ICell2D&#xA;{&#xA;&#xA;    public int West   { get { return X.predecessor;   } set { X.predecessor = value;   } }  // x direction&#xA;    public int East   { get { return X.successor;   } set { X.successor = value;   } }  // x direction&#xA;    &#xA;    public int North  { get { return Y.predecessor;  } set { Y.predecessor = value;  } }  // y direction&#xA;    public int South  { get { return Y.successor;  } set { Y.successor = value;  } }  // y direction&#xA;    &#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="ICell2DImpl.cs" srcType="user" uri="impl.common.topology.Mesh2DImpl/bin/1.0.0.0/ICell2DImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/impl.common.topology.Mesh2DImpl/bin/1.0.0.0/BaseICell2DImpl.dll</dependency>
          <dependency>common.topology.Mesh2D/bin/1.0.0.0/ICell2D.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="126" y="65">
        <color b="42" g="42" r="165"/>
      </visualDescription>
      <port name="y">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="y" sRef="y"/>
      </port>
      <port name="x">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="x" sRef="x"/>
      </port>
    </interface>
    <unit iRef="ICell2DImpl" multiple="true" private="false" replica="0" uRef="cell" visibleInterface="true">
      <super cRef="base" uRef="cell"/>
      <visualDescription h="40" w="80" x="64" y="219"/>
    </unit>
  </componentInfo>
</component:component>