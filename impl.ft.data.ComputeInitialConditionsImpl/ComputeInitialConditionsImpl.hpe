<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000051542a70d6a5ae15c21db8d22bc8a1231dcc17d0be3d16e71ebc6ed16d14504ea5235bf14f8ac0054b7878d404dee92bd2fb90bbe6ac54d37b2c73a2d7aa255be54e3cfd91ca29a77afe2c12e58a524ff250a316f85d0090dbe2d87e9a55bf345cafa1167dee748e483c51a8bddb0f5d7d9cf0d09653a8675dd0283223af659b" isAbstract="false" kind="Computation" name="ComputeInitialConditionsImpl" packagePath="impl.ft.data">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000001fbe62a2952b94bdc7b5149aadea101b67ed58042f2e69bc8428ca14c654652ae9a7b260a6a15e85740c21e048d67628f1bee80d847ced8f1e467cfefd6de638ed1b52b07947de997ba361dedd4018a3cce146c92428239802a8798c951963bc88fa7129145cfb634c6b070d06a3bd35218ef69f12ac8374077c042d9b28e68e" localRef="base" location="ft.data.ComputeInitialConditions/ComputeInitialConditions.hpe" name="ComputeInitialConditions" package="ft.data" version="1.0.0.0">
        <visualDescription h="30" w="50" x="310" y="446">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000c1356ca9b2057b2cdaf7bab412ca75fdb39021bca4f4290f39b086b8aa2f45538e23e1af3360a5e85aa8ee62ffd7b1d4b10715fa0b45745b78c496d18d59a1ccb3f0c4a6bb86a302fa6a6ddeba6177db23a3c2f83b018ebec4ecc0035817670de32d367791764d224e4a7387fdcc3f9eea7a6f591775c9b9e13b978d62d79de8" localRef="problem_data" location="ft.data.ProblemDefinition/ProblemDefinition.hpe" multiple="false" name="ProblemDefinition" package="ft.data" exposed="true">
          <visualDescription h="53" w="107" x="76" y="421">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000095e97e58b9ed73eb389d5d67e242ab61d50128486f43ba0afe8ff6bd8d08840f848c22ffad8acff4ef3bd7a6d1af46fd7413f1bf81704ab9152bd0c5c5f6ee8c128f38a1196abb5039132524dd4a4294fda2d6a19c7f1019c9e09736f96280d2298e765b3e51d1f8e779c60cbb6ccff11284a8fd11385bfdb9a8c9d44ada4f92" localRef="blocks_info" location="ft.datapartition.BlocksInfo/BlocksInfo.hpe" multiple="true" name="BlocksInfo" package="ft.datapartition" exposed="true">
            <visualDescription h="35" w="112" x="468" y="423">
              <color b="255" g="255" r="255"/>
            </visualDescription>
            <parameter formFieldId="instance_type" varName="I"/>
            <parameter formFieldId="class" varName="C"/>
            <unitBounds parallel="false" uRef="blocks">
              <visualDescription h="10" w="10" x="5" y="2"/>
            </unitBounds>
          </port>
          <unitBounds parallel="true" uRef="problem">
            <visualDescription h="10" w="10" x="46" y="5"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000095e97e58b9ed73eb389d5d67e242ab61d50128486f43ba0afe8ff6bd8d08840f848c22ffad8acff4ef3bd7a6d1af46fd7413f1bf81704ab9152bd0c5c5f6ee8c128f38a1196abb5039132524dd4a4294fda2d6a19c7f1019c9e09736f96280d2298e765b3e51d1f8e779c60cbb6ccff11284a8fd11385bfdb9a8c9d44ada4f92" localRef="blocks_info" location="ft.datapartition.BlocksInfo/BlocksInfo.hpe" multiple="true" name="BlocksInfo" package="ft.datapartition" exposed="true">
          <visualDescription h="35" w="112" x="468" y="423">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds parallel="false" uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="compute_initial_conditions">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000697d9c305173b3189be802c3ff79de737b8611ceba3908e4e506fe84eb48c13ee6bcff5465c546d3f17f9c4be9fd4c3730beb0cdbb834a2cd9a48238e589010fa646d420fa851da6a7fa169817d907191deacca367dd83200354bbdc96d3c5f2986b7d7a8bfceacfa46cb59e4a094c15363a95dc6f9f631d9955d8a6cc75f593" localRef="instance_type" location="ft.problem_size.Instance_FT/Instance_FT.hpe" multiple="false" name="Instance_FT" package="ft.problem_size" exposed="false">
      <visualDescription h="39" w="101" x="143" y="198">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds parallel="false" uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" multiple="false" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="540" y="126">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <interface iRef="IComputeInitialConditionsImpl" nArgs="2">
      <slice isRef="problem_data">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="65" y="26"/>
      </slice>
      <slice isRef="instance_type">
        <originRef cRef="instance_type" iRef="IInstance"/>
        <visualDescription h="10" w="10" x="121" y="25"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using ft.datapartition.BlocksInfo;&#xA;using ft.data.ProblemDefinition;&#xA;using ft.problem_size.Instance_FT;&#xA;using common.problem_size.Class;&#xA;using ft.problem_size.Instance;&#xA;using ft.data.ComputeInitialConditions;&#xA;&#xA;namespace impl.ft.data.ComputeInitialConditionsImpl { &#xA;&#x9;public abstract class BaseIComputeInitialConditionsImpl&lt;I, C>: Computation, BaseIComputeInitialConditions&lt;I, C>&#xA;&#x9;where I:IInstance_FT&lt;C>&#xA;&#x9;where C:IClass{&#xA;&#x9;   &#xA;&#x9;&#x9;#region data&#xA;&#x9;&#x9;    protected double[, , ,] u1;&#xA;&#x9;&#x9;&#x9;protected int nx, ny, nz, size1, size2, REAL, IMAG;&#xA;&#x9;&#x9;&#x9;protected int[] ystart, zstart;&#xA;&#x9;&#x9;&#x9;protected int[,] dims;&#xA;&#x9;&#x9;&#x9;override public void initialize(){&#xA;&#x9;&#x9;&#x9;    u1 = Problem.Field_u1;&#xA;&#x9;&#x9;&#x9;&#x9;nx = Instance.nx;&#xA;&#x9;&#x9;&#x9;&#x9;ny = Instance.ny;&#xA;&#x9;&#x9;&#x9;&#x9;nz = Instance.nz;&#xA;&#x9;&#x9;&#x9;&#x9;size1 = Blocks.size1;&#xA;&#x9;&#x9;&#x9;&#x9;size2 = Blocks.size2;&#xA;&#x9;&#x9;&#x9;&#x9;REAL = Constants.REAL;&#xA;&#x9;&#x9;&#x9;&#x9;IMAG = Constants.IMAG;&#xA;&#x9;&#x9;&#x9;&#x9;ystart = Blocks.ystart;&#xA;&#x9;&#x9;&#x9;&#x9;zstart = Blocks.zstart;&#xA;&#x9;&#x9;&#x9;&#x9;dims = Blocks.dims;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;#endregion&#xA;&#x9;&#xA;&#x9;&#x9;private IBlocks&lt;I,C> blocks = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IBlocks&lt;I,C> Blocks {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.blocks = (IBlocks&lt;I,C>) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.blocks;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.problem;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private I instance = default(I);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected I Instance {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.instance == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.instance = (I) Services.getPort(&quot;instance_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.instance;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9; &#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIComputeInitialConditionsImpl.cs" srcType="base" uri="impl.ft.data.ComputeInitialConditionsImpl/bin/1.0.0.0/BaseIComputeInitialConditionsImpl.dll" versionId="1.0.0.0">
          <dependency>ft.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>ft.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>ft.problem_size.Instance_FT/bin/1.0.0.0/IInstance_FT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>ft.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>ft.data.ComputeInitialConditions/bin/1.0.0.0/BaseIComputeInitialConditions.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using ft.problem_size.Instance_FT;&#xA;using common.problem_size.Class;&#xA;using ft.data.ComputeInitialConditions;&#xA;&#xA;namespace impl.ft.data.ComputeInitialConditionsImpl { &#xA;&#x9;public class IComputeInitialConditionsImpl&lt;I, C> : BaseIComputeInitialConditionsImpl&lt;I, C>, IComputeInitialConditions&lt;I, C>&#xA;&#x9;where I:IInstance_FT&lt;C>&#xA;&#x9;where C:IClass{&#xA;&#x9;   &#xA;&#x9;&#xA;&#x9;&#x9;public override void main() { &#xA;            int k;&#xA;            double x0, start, an, dummy;&#xA;            double seed = 314159265, a = 1220703125;&#xA;            start = seed;&#xA;            an = ipow46(a, 2*nx, (zstart[0]-1)*ny + (ystart[0]-1));&#xA;            dummy = randlc(ref start, an);&#xA;            an = ipow46(a, 2*nx, ny);&#xA;            for(k = 0; k &lt; dims[2, 0]; k++) {&#xA;                x0 = start;&#xA;                vranlc(2 * nx * dims[1, 0], x0, a, u1, k);&#xA;                if((k+1) != dims[2, 0])&#xA;                    dummy = randlc(ref start, an);&#xA;            }&#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;}&#xA;        public double ipow46(double a, int exp_1, int exp_2) {&#xA;            double result;&#xA;            double dummy, q, r;&#xA;            int n, n2;&#xA;            bool  two_pow;&#xA;            result = 1;&#xA;            if(exp_2 == 0 || exp_1 == 0)&#xA;                return result;&#xA;            q = a;&#xA;            r = 1;&#xA;            n = exp_1;&#xA;            two_pow = true;&#xA;&#xA;            while(two_pow) {&#xA;                n2 = n/2;&#xA;                if(n2 * 2 == n) {&#xA;                    dummy = randlc(ref q, q);&#xA;                    n = n2;&#xA;                }&#xA;                else {&#xA;                    n = n * exp_2;&#xA;                    two_pow = false;&#xA;                }&#xA;            }&#xA;&#xA;            while(n > 1) {&#xA;                n2 = n/2;&#xA;                if(n2 * 2 == n) {&#xA;                    dummy = randlc(ref q, q);&#xA;                    n = n2;&#xA;                }&#xA;                else {&#xA;                    dummy = randlc(ref r, q);&#xA;                    n = n-1;&#xA;                }&#xA;            }&#xA;            dummy = randlc(ref r, q);&#xA;            result = r;&#xA;            return result;&#xA;        }&#xA;        public double randlc(ref double x, double a) {&#xA;            double r23, r46, t23, t46, t1, t2, t3, t4, a1, a2, x1, x2, z;&#xA;&#xA;            r23 = Math.Pow(0.5, 23);&#xA;            r46 = Math.Pow(r23, 2);&#xA;            t23 = Math.Pow(2.0, 23);&#xA;            t46 = Math.Pow(t23, 2);&#xA;&#xA;            t1 = r23 * a;&#xA;            a1 = (int)(t1);&#xA;            a2 = a - t23 * a1;&#xA;&#xA;            t1 = r23 * x;&#xA;            x1 = (int)(t1);&#xA;            x2 = x - t23 * x1;&#xA;&#xA;&#xA;            t1 = a1 * x2 + a2 * x1;&#xA;            t2 = (int)(r23 * t1);&#xA;            z = t1 - t23 * t2;&#xA;            t3 = t23 * z + a2 * x2;&#xA;            t4 = (int)(r46 * t3);&#xA;            x = t3 - t46 * t4;&#xA;            return (r46*x);&#xA;        }&#xA;&#x9;&#x9;&#xA;        public void vranlc(int n, double x, double a, double[, , ,] u1, int k) &#xA;&#x9;&#x9;{&#xA;            double r23, r46, t23, t46;&#xA;            int nv;&#xA;            r23 = Math.Pow(2.0, (-23));&#xA;            r46 = r23 * r23;&#xA;            t23 = Math.Pow(2.0, 23);&#xA;            t46 = t23 * t23;&#xA;            nv = 64;&#xA;            double[] xv = new double[nv];&#xA;            double t1, t2, t3, t4, an, a1=0, a2=0, x1, x2, yy;&#xA;            int n1, i, j;&#xA;            t1 = x;&#xA;            n1 = (int)min(n, nv);&#xA;            for(i = 1; i &lt;= n1; i++) {&#xA;                xv[i-1] = t46 * randlc(ref t1, a);&#xA;            }&#xA;            if(n > nv) {&#xA;                t1 = a;&#xA;                t2 = r46 * a;&#xA;&#xA;                for(i = 1; i &lt;= nv - 1; i++) {&#xA;                    t2 = randlc(ref t1, a);&#xA;                }&#xA;                an = t46 * t2;&#xA;                t1 = r23 * an;&#xA;                a1 = (int)(t1);&#xA;                a2 = an - t23 * a1;&#xA;            }&#xA;            for(j = 0; j &lt;= n - 1; j = j + nv) {&#xA;                n1 = (int)min(nv, n - j);&#xA;                int io;&#xA;                for(i = 0; i &lt; n1; i++) {&#xA;                    io = (i + j) + (2 * nx * dims[1, 0] * k);&#xA;                    int m1 = (io % size1);&#xA;                    int m2 = (m1 % size2);&#xA;                    int _i = io/size1;&#xA;                    int _j = m1/size2;&#xA;                    int _k = m2/2;&#xA;                    int _t = (m2 % 2);&#xA;&#xA;                    u1[_i, _j, _k, _t] = r46*xv[i];&#xA;                }&#xA;                if(j + n1 == n) {&#xA;                    x = xv[n1-1];&#xA;                    return;&#xA;                }&#xA;                for(i = 0; i &lt; nv; i++) {&#xA;                    t1 = r23 * xv[i];&#xA;                    x1 = (int)(t1);&#xA;                    x2 = xv[i] - t23 * x1;&#xA;                    t1 = a1 * x2 + a2 * x1;&#xA;                    t2 = (int)(r23 * t1);&#xA;                    yy = t1 - t23 * t2;&#xA;                    t3 = t23 * yy + a2 * x2;&#xA;                    t4 = (int)(r46 * t3);&#xA;                    xv[i] = t3 - t46 * t4;&#xA;                }&#xA;            }&#xA;        }&#xA;        public double min(int n1, int n2) { return n1 &lt; n2 ? n1 : n2; }&#x9;&#x9;&#xA;&#x9;&#x9;//public void setParameters(double[, , ,] u1){&#xA;&#x9;&#x9;//   this.u1 = u1;&#xD;&#xA;&#x9;//&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IComputeInitialConditionsImpl.cs" srcType="user" uri="impl.ft.data.ComputeInitialConditionsImpl/bin/1.0.0.0/IComputeInitialConditionsImpl.dll" versionId="1.0.0.0">
          <dependency>ft.problem_size.Instance_FT/bin/1.0.0.0/IInstance_FT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>%WORKSPACE/impl.ft.data.ComputeInitialConditionsImpl/bin/1.0.0.0/BaseIComputeInitialConditionsImpl.dll</dependency>
          <dependency>ft.data.ComputeInitialConditions/bin/1.0.0.0/IComputeInitialConditions.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="166" x="174" y="202">
        <color b="128" g="255" r="0"/>
      </visualDescription>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="problem_data"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="problem_data"/>
      </port>
      <parameter iname="IInstance_FT" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IComputeInitialConditionsImpl" multiple="true" private="false" replica="0" uRef="compute_initial_conditions" visibleInterface="true">
      <super cRef="base" uRef="compute_initial_conditions"/>
      <visualDescription h="40" w="153" x="235" y="332"/>
    </unit>
  </componentInfo>
</component:component>