<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000006f824c7074689711fbd4ce3f65724a9452041d166ebec39d6ea9163ea2faa48408beffd403413de2d674060a9a88a7e428a9cd9bef9bc8e32571c92fec25d303b503d34adc912b6198d63995041f8aeb01ae53c37524338378608b260bca42a080c25fe4eec49deda0b5bff4f3e71688895fd9c1e2e010cf951b6f18bfa683a2" isAbstract="false" kind="Computation" name="FftImpl" packagePath="impl.ft.fft">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000df06cbfecfe77ffb9a85f67e2a110edf8a28744d951b2959dc2e1cf0cc0fa5fc24c9bb6c2618c862744fed678a8a754b20aa976918de91e40af448a2b796fc938adfa11cdfa4950d58942d18f822bfd2e6847d9eaa898b6b1a96d87f90ef34367cfbe6c7057ca7bfc0221e7178e276acd83bfc5abe7f84c9193bb81bbab880a9" localRef="base" location="ft.fft.Fft/Fft.hpe" name="Fft" package="ft.fft" version="1.0.0.0">
        <visualDescription h="30" w="50" x="276" y="505">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000095e97e58b9ed73eb389d5d67e242ab61d50128486f43ba0afe8ff6bd8d08840f848c22ffad8acff4ef3bd7a6d1af46fd7413f1bf81704ab9152bd0c5c5f6ee8c128f38a1196abb5039132524dd4a4294fda2d6a19c7f1019c9e09736f96280d2298e765b3e51d1f8e779c60cbb6ccff11284a8fd11385bfdb9a8c9d44ada4f92" localRef="blocks_info" location="ft.datapartition.BlocksInfo/BlocksInfo.hpe" multiple="true" name="BlocksInfo" package="ft.datapartition" exposed="true">
          <visualDescription h="35" w="74" x="672" y="422">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds parallel="false" uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000c1356ca9b2057b2cdaf7bab412ca75fdb39021bca4f4290f39b086b8aa2f45538e23e1af3360a5e85aa8ee62ffd7b1d4b10715fa0b45745b78c496d18d59a1ccb3f0c4a6bb86a302fa6a6ddeba6177db23a3c2f83b018ebec4ecc0035817670de32d367791764d224e4a7387fdcc3f9eea7a6f591775c9b9e13b978d62d79de8" localRef="problem_data" location="ft.data.ProblemDefinition/ProblemDefinition.hpe" multiple="false" name="ProblemDefinition" package="ft.data" exposed="true">
          <visualDescription h="30" w="93" x="88" y="514">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000095e97e58b9ed73eb389d5d67e242ab61d50128486f43ba0afe8ff6bd8d08840f848c22ffad8acff4ef3bd7a6d1af46fd7413f1bf81704ab9152bd0c5c5f6ee8c128f38a1196abb5039132524dd4a4294fda2d6a19c7f1019c9e09736f96280d2298e765b3e51d1f8e779c60cbb6ccff11284a8fd11385bfdb9a8c9d44ada4f92" localRef="blocks_info" location="ft.datapartition.BlocksInfo/BlocksInfo.hpe" multiple="true" name="BlocksInfo" package="ft.datapartition" exposed="true">
            <visualDescription h="35" w="74" x="704" y="483">
              <color b="255" g="255" r="255"/>
            </visualDescription>
            <parameter formFieldId="instance_type" varName="I"/>
            <parameter formFieldId="class" varName="C"/>
            <unitBounds parallel="false" uRef="blocks">
              <visualDescription h="10" w="10" x="5" y="2"/>
            </unitBounds>
          </port>
          <unitBounds parallel="true" uRef="problem">
            <visualDescription h="10" w="10" x="45" y="3"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="fft">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000697d9c305173b3189be802c3ff79de737b8611ceba3908e4e506fe84eb48c13ee6bcff5465c546d3f17f9c4be9fd4c3730beb0cdbb834a2cd9a48238e589010fa646d420fa851da6a7fa169817d907191deacca367dd83200354bbdc96d3c5f2986b7d7a8bfceacfa46cb59e4a094c15363a95dc6f9f631d9955d8a6cc75f593" localRef="instance_type" location="ft.problem_size.Instance_FT/Instance_FT.hpe" multiple="false" name="Instance_FT" package="ft.problem_size" exposed="false">
      <visualDescription h="30" w="122" x="153" y="182">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds parallel="false" uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" multiple="false" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="483" y="147">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <interface iRef="IFftImpl" nArgs="2">
      <slice isRef="cffts1">
        <originRef cRef="cffts1" iRef="ICffts"/>
        <visualDescription h="10" w="10" x="6" y="4"/>
      </slice>
      <slice isRef="cffts2">
        <originRef cRef="cffts2" iRef="ICffts"/>
        <visualDescription h="10" w="10" x="66" y="10"/>
      </slice>
      <slice isRef="cffts3">
        <originRef cRef="cffts3" iRef="ICffts"/>
        <visualDescription h="10" w="10" x="66" y="20"/>
      </slice>
      <slice isRef="transpose_xy_z">
        <originRef cRef="transpose_xy_z" iRef="ITranspose"/>
        <visualDescription h="10" w="10" x="170" y="92"/>
      </slice>
      <slice isRef="transpose_x_y">
        <originRef cRef="transpose_x_y" iRef="ITranspose"/>
        <visualDescription h="10" w="10" x="28" y="46"/>
      </slice>
      <slice isRef="transpose_x_yz">
        <originRef cRef="transpose_x_yz" iRef="ITranspose"/>
        <visualDescription h="10" w="10" x="67" y="31"/>
      </slice>
      <slice isRef="transpose_x_z">
        <originRef cRef="transpose_x_z" iRef="ITranspose"/>
        <visualDescription h="10" w="10" x="68" y="43"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using ft.datapartition.BlocksInfo;&#xA;using ft.fft.Transpose;&#xA;using ft.problem_size.Instance_FT;&#xA;using common.problem_size.Class;&#xA;using common.axis.XY_Z_Axes;&#xA;using ft.data.ProblemDefinition;&#xA;using common.axis.X_YZ_Axis;&#xA;using common.axis.X_Y_Axis;&#xA;using common.axis.X_Z_Axis;&#xA;using ft.fft.Cffts;&#xA;using common.axis.YAxis;&#xA;using common.axis.ZAxis;&#xA;using common.axis.XAxis;&#xA;using ft.fft.Fft;&#xA;&#xA;namespace impl.ft.fft.FftImpl { &#xA;&#x9;public abstract class BaseIFftImpl&lt;I, C>: Computation, BaseIFft&lt;I, C>&#xA;&#x9;where I:IInstance_FT&lt;C>&#xA;&#x9;where C:IClass{&#xA;&#x9;   &#xA;&#x9;&#x9;#region data&#xA;&#x9;&#x9;&#x9;protected int layout_0D, layout_1D, layout_2D, layout_type;&#xA;&#x9;&#x9;&#x9;protected int[,] dims;&#xA;&#x9;&#x9;&#x9;override public void initialize(){&#xA;&#x9;&#x9;&#x9;&#x9;layout_0D = Constants.layout_0D;&#xA;&#x9;&#x9;&#x9;&#x9;layout_1D = Constants.layout_1D;&#xA;&#x9;&#x9;&#x9;&#x9;layout_2D = Constants.layout_2D;&#xA;&#x9;&#x9;&#x9;&#x9;layout_type = Blocks.layout_type;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;dims = Blocks.dims;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;#endregion&#xA;&#x9;&#xA;&#x9;&#x9;private IBlocks&lt;I,C> blocks = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IBlocks&lt;I,C> Blocks {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.blocks = (IBlocks&lt;I,C>) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.blocks;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ITranspose&lt;I, C, IXY_Z_Axes> transpose_xy_z = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ITranspose&lt;I, C, IXY_Z_Axes> Transpose_xy_z {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.transpose_xy_z == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.transpose_xy_z = (ITranspose&lt;I, C, IXY_Z_Axes>) Services.getPort(&quot;transpose_xy_z&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.transpose_xy_z;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.problem;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ITranspose&lt;I, C, IX_YZ_Axis> transpose_x_yz = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ITranspose&lt;I, C, IX_YZ_Axis> Transpose_x_yz {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.transpose_x_yz == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.transpose_x_yz = (ITranspose&lt;I, C, IX_YZ_Axis>) Services.getPort(&quot;transpose_x_yz&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.transpose_x_yz;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ITranspose&lt;I, C, IX_Y_Axis> transpose_x_y = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ITranspose&lt;I, C, IX_Y_Axis> Transpose_x_y {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.transpose_x_y == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.transpose_x_y = (ITranspose&lt;I, C, IX_Y_Axis>) Services.getPort(&quot;transpose_x_y&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.transpose_x_y;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ITranspose&lt;I, C, IX_Z_Axis> transpose_x_z = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ITranspose&lt;I, C, IX_Z_Axis> Transpose_x_z {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.transpose_x_z == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.transpose_x_z = (ITranspose&lt;I, C, IX_Z_Axis>) Services.getPort(&quot;transpose_x_z&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.transpose_x_z;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ICffts&lt;I, C, IY> cffts2 = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ICffts&lt;I, C, IY> Cffts2 {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.cffts2 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.cffts2 = (ICffts&lt;I, C, IY>) Services.getPort(&quot;cffts2&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.cffts2;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ICffts&lt;I, C, IZ> cffts3 = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ICffts&lt;I, C, IZ> Cffts3 {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.cffts3 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.cffts3 = (ICffts&lt;I, C, IZ>) Services.getPort(&quot;cffts3&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.cffts3;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ICffts&lt;I, C, IX> cffts1 = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ICffts&lt;I, C, IX> Cffts1 {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.cffts1 == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.cffts1 = (ICffts&lt;I, C, IX>) Services.getPort(&quot;cffts1&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.cffts1;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9; &#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIFftImpl.cs" srcType="base" uri="impl.ft.fft.FftImpl/bin/1.0.0.0/BaseIFftImpl.dll" versionId="1.0.0.0">
          <dependency>ft.datapartition.BlocksInfo/bin/1.0.0.0/IBlocks.dll</dependency>
          <dependency>ft.fft.Transpose/bin/1.0.0.0/ITranspose.dll</dependency>
          <dependency>ft.problem_size.Instance_FT/bin/1.0.0.0/IInstance_FT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.axis.XY_Z/bin/1.0.0.0/IXY_Z.dll</dependency>
          <dependency>ft.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>common.axis.X_YZ/bin/1.0.0.0/IX_YZ.dll</dependency>
          <dependency>common.axis.XY/bin/1.0.0.0/IXY.dll</dependency>
          <dependency>common.axis.XZ/bin/1.0.0.0/IXZ.dll</dependency>
          <dependency>ft.fft.Cffts/bin/1.0.0.0/ICffts.dll</dependency>
          <dependency>common.axis.YAxis/bin/1.0.0.0/IY.dll</dependency>
          <dependency>common.axis.ZAxis/bin/1.0.0.0/IZ.dll</dependency>
          <dependency>common.axis.XAxis/bin/1.0.0.0/IX.dll</dependency>
          <dependency>ft.fft.Fft/bin/1.0.0.0/BaseIFft.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using ft.problem_size.Instance_FT;&#xA;using common.problem_size.Class;&#xA;using ft.fft.Fft;&#xA;&#xA;namespace impl.ft.fft.FftImpl &#xA;{ &#xA;&#x9;public class IFftImpl&lt;I, C> : BaseIFftImpl&lt;I, C>, IFft&lt;I, C>&#xA;&#x9;where I:IInstance_FT&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;{&#x9;   &#xA;&#x9;    private int dir;&#xA;&#x9;    private double[, , ,] u1;&#xA;&#x9;    private double[, , ,] u02;&#xA;&#x9;&#xA;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;{ &#xA;            if(dir == 1) &#xA;&#x9;&#x9;&#x9;{&#xA;                if(layout_type == layout_0D) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    Cffts1.setParameters(dir, dims[0, 0], dims[1, 0], dims[2, 0], u1, u1); Cffts1.go();&#xA;                    Cffts2.setParameters(dir, dims[0, 1], dims[1, 1], dims[2, 1], u1, u1); Cffts2.go();&#xA;                    Cffts3.setParameters(dir, dims[0, 2], dims[1, 2], dims[2, 2], u1, u02); Cffts3.go();&#xA;                }&#xA;                else if(layout_type == layout_1D) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    Cffts1.setParameters(dir, dims[0, 0], dims[1, 0], dims[2, 0], u1, u1); Cffts1.go();&#xA;                    Cffts2.setParameters(dir, dims[0, 1], dims[1, 1], dims[2, 1], u1, u1); Cffts2.go();&#xA;                    Transpose_xy_z.setParameters(1, 2, u1, u02); Transpose_xy_z.go();&#xA;                    Cffts1.setParameters(dir, dims[0, 2], dims[1, 2], dims[2, 2], u02, u02); Cffts1.go();&#xA;                }&#xA;                else if(layout_type == layout_2D) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    Cffts1.setParameters(dir, dims[0, 0], dims[1, 0], dims[2, 0], u1, u1); Cffts1.go();&#xA;                    Transpose_x_y.setParameters(0, 1, u1, u02); Transpose_x_y.go();&#xA;                    Cffts1.setParameters(dir, dims[0, 1], dims[1, 1], dims[2, 1], u02, u02); Cffts1.go();&#xA;                    Transpose_x_z.setParameters(1, 2, u02, u1); Transpose_x_z.go();&#xA;                    Cffts1.setParameters(dir, dims[0, 2], dims[1, 2], dims[2, 2], u1, u02); Cffts1.go();&#xA;                }&#xA;            }&#xA;            else &#xA;&#x9;&#x9;&#x9;{&#xA;                if (layout_type == layout_0D) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    Cffts3.setParameters(dir, dims[0, 2], dims[1, 2], dims[2, 2], u1, u1); Cffts3.go();&#xA;                    Cffts2.setParameters(dir, dims[0, 1], dims[1, 1], dims[2, 1], u1, u1); Cffts2.go();&#xA;                    Cffts1.setParameters(dir, dims[0, 0], dims[1, 0], dims[2, 0], u1, u02); Cffts1.go();&#xA;                }&#xA;                else if (layout_type == layout_1D) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    Cffts1.setParameters(dir, dims[0, 2], dims[1, 2], dims[2, 2], u1, u1); Cffts1.go();&#xA;                    Transpose_x_yz.setParameters(2, 1, u1, u02); Transpose_x_yz.go();&#xA;                    Cffts2.setParameters(dir, dims[0, 1], dims[1, 1], dims[2, 1], u02, u02); Cffts2.go();&#xA;                    Cffts1.setParameters(dir, dims[0, 0], dims[1, 0], dims[2, 0], u02, u02); Cffts1.go();&#xA;                }&#xA;                else if (layout_type == layout_2D) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    Cffts1.setParameters(dir, dims[0, 2], dims[1, 2], dims[2, 2], u1, u1); Cffts1.go();&#xA;                    Transpose_x_z.setParameters(2, 1, u1, u02); Transpose_x_z.go();&#xA;                    Cffts1.setParameters(dir, dims[0, 1], dims[1, 1], dims[2, 1], u02, u02); Cffts1.go();&#xA;                    Transpose_x_y.setParameters(1, 0, u02, u1); Transpose_x_y.go();&#xA;                    Cffts1.setParameters(dir, dims[0, 0], dims[1, 0], dims[2, 0], u1, u02); Cffts1.go();&#xA;                }&#xA;            }&#xA;&#x9;&#x9;    &#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public void setParameters(int dir, double[, , ,] u1, double[, , ,] u02){&#xA;&#x9;&#x9;   this.dir = dir;&#xA;&#x9;&#x9;   this.u1  = u1;&#xA;&#x9;&#x9;   this.u02 = u02;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IFftImpl.cs" srcType="user" uri="impl.ft.fft.FftImpl/bin/1.0.0.0/IFftImpl.dll" versionId="1.0.0.0">
          <dependency>ft.problem_size.Instance_FT/bin/1.0.0.0/IInstance_FT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>%WORKSPACE/impl.ft.fft.FftImpl/bin/1.0.0.0/BaseIFftImpl.dll</dependency>
          <dependency>ft.fft.Fft/bin/1.0.0.0/IFft.dll</dependency>
        </file>
      </sources>
      <visualDescription h="105" w="184" x="84" y="173">
        <color b="128" g="0" r="255"/>
      </visualDescription>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="cffts1"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="cffts1"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="cffts2"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="cffts2"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="cffts3"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="cffts3"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="transpose_xy_z"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="transpose_xy_z"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="transpose_x_y"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="transpose_x_y"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="transpose_x_yz"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="transpose_x_yz"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="transpose_x_z"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="transpose_x_z"/>
      </port>
      <parameter iname="IInstance_FT" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IFftImpl" multiple="true" private="false" replica="0" uRef="fft" visibleInterface="true">
      <super cRef="base" uRef="fft"/>
      <visualDescription h="58" w="85" x="247" y="395"/>
    </unit>
  </componentInfo>
</component:component>