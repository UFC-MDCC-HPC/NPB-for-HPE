<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000041c9d57e68154bb35642b777d158b79f4657c902cd2cfa14e17050bd4dd066c1e3621e68f33597098ae12b302d2c1b0bc0599fc9a5773246967150f24c76a20dc5548aa7204eb0b3497a230b12f8a3b8242c0b1abb75058a2fb8c3f84664d5026824af45d6049a4e0502513e53dfa8938924fe1f8628082d3060a5d59904dba6" isAbstract="false" kind="Computation" name="BlockLowerTriangularSolutionWFWork" packagePath="impl.lu.ssor">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000ef0820961ec17ffd4f7395e6a34af283ca465a51477ff0ee3d153b346694b5136240392b729a7be108fd9b1e655b1bffac846bcb8efbdc3cbfbee5ef02b222971168b8181df690372896178d14488f627b134052e3007213099b83aeea577677a78218d926206181c5cd8aa09822fa8ef9395b38e8837c236f870aa1b7ca5d9b" localRef="base" location="lu.ssor.BlockTriangularSolutionWFWork/BlockTriangularSolutionWFWork.hpe" name="BlockTriangularSolutionWFWork" package="lu.ssor" version="1.0.0.0">
        <visualDescription h="38" w="105" x="182" y="189">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="direction" varName="DIR"/>
        <parameter formFieldId="class" varName="C"/>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000003d814b4345cf5faa20de75a01f91d78801c9aa8825d72a72adf61dc3f77f69a0d55eaceeec93bd9f288f7929dcceaf5a0bf739dbda828f06cacf8cc8d7396a243bfad7d225e794677392c2f895cd42470e6dbf22f2bf1ce97b9dae1ce70dc67096f97eec9cf234ee0a67fe88da930be655bc5fc0b8df79434c5cca0f2ba23c94" localRef="y_buffer" location="common.Buffer/Buffer.hpe" multiple="true" name="Buffer" package="common" exposed="true">
          <visualDescription h="30" w="102" x="297" y="413">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="buffer">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000003d814b4345cf5faa20de75a01f91d78801c9aa8825d72a72adf61dc3f77f69a0d55eaceeec93bd9f288f7929dcceaf5a0bf739dbda828f06cacf8cc8d7396a243bfad7d225e794677392c2f895cd42470e6dbf22f2bf1ce97b9dae1ce70dc67096f97eec9cf234ee0a67fe88da930be655bc5fc0b8df79434c5cca0f2ba23c94" localRef="x_buffer" location="common.Buffer/Buffer.hpe" multiple="true" name="Buffer" package="common" exposed="true">
          <visualDescription h="30" w="115" x="351" y="130">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="buffer">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="x" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="30" w="50" x="56" y="444">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="y" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="30" w="50" x="174" y="490">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000f3194c0a7b197fb560dfcad8ee5b421b78f1f03d002a081027a334aa25ebf3ca7669300c0fd23f8f1547226d2833753b8583e09a6b1fcc393107abb8e8670fb2d48b48ea486fa7f94cb968f2760707e531b14426dedc94542dfdf89efcdf612aeabb738a4b713e0a7a9b3ee97b95d783693b746ddcce119ba7c5080176270d8a" localRef="blocks_info" location="lu.datapartition.BlocksInfo/BlocksInfo.hpe" multiple="true" name="BlocksInfo" package="lu.datapartition" exposed="true">
          <visualDescription h="42" w="122" x="143" y="295">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds parallel="false" uRef="blocks">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f8aadd94be2122c6dbf97a8db4c368df4aa14e5eef40999c777e681c973106bec55b80c133f1e7301d0ff36e2ee37a1d7d095ffff4581f295b2e8fc055fc07304178d993e14731e9c3d1e72370eee41c30ae18e6d096d5d70ac13a2833e8945cd641f4a3cab17bc2397b395bc234fdfa244afa599eb514a94d884e663b3a3a5" localRef="problem_data" location="lu.data.ProblemDefinition/ProblemDefinition.hpe" multiple="false" name="ProblemDefinition" package="lu.data" exposed="true">
          <visualDescription h="70" w="137" x="105" y="427">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds parallel="true" uRef="problem">
            <visualDescription h="10" w="10" x="65" y="16"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="bts_work">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000053a9c5b99d0b2ca97a55d48da1213fb671bb0c0c1d5a641fffdcd4fc2f4965fa3815709ac847bdbadf8c36d00dd09a09e789c7a76ae6fb649e77a84f24685a5af2c7719eb9a31f44faa927f3a7882fc3ed842640b60142241f93abf109901ee7500e4300bd5fb50ed3c2ae9a06a2251b9966a52be85773c5620e0a9fbc964f94" localRef="forward" location="common.direction.Forward/Forward.hpe" multiple="false" name="Forward" package="common.direction" exposed="false">
      <visualDescription h="30" w="50" x="122" y="64">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="forward">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000077a299c99b97aaa77aa6e94dc72ce7dd6776e75fef652354d4003676b20ec539b228d1d8aea09626b843cc3ab1c0d84ad167051ddc0b314c7649bd14f16c7858a0eb57d78a2e8a79c7f56f9664fadc7648612fdedc8d36bd105d479fd63b19c286b302d6e4c45aed4573ca06780a204a2d59aeff7863e4b8241ce93db192f0ae" localRef="instance" location="lu.problem_size.Instance/Instance.hpe" multiple="false" name="Instance" package="lu.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="28" y="313">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds parallel="false" uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" multiple="false" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="62" y="163">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="forward" varName="DIR"/>
    <supplyParameter cRef="instance" varName="I"/>
    <interface iRef="IBTSLowerWork" nArgs="3">
      <slice isRef="problem_data">
        <originRef cRef="problem_data" iRef="IProblemDefinition"/>
        <visualDescription h="10" w="10" x="53" y="28"/>
      </slice>
      <slice isRef="blocks_info">
        <originRef cRef="blocks_info" iRef="IBlocksInfo"/>
        <visualDescription h="10" w="10" x="16" y="18"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.data.ProblemDefinition;&#xA;using lu.problem_size.Instance;&#xA;using common.problem_size.Class;&#xA;using lu.datapartition.BlocksInfo;&#xA;using common.Buffer;&#xA;using common.direction.Direction;&#xA;using common.direction.Forward;&#xA;using lu.ssor.BlockTriangularSolutionWFWork;&#xA;using common.topology.Ring;&#xA;&#xA;namespace impl.lu.ssor.BlockLowerTriangularSolutionWFWork { &#xA;&#xA;public abstract class BaseIBTSLowerWork&lt;DIR, I, C>: Computation, BaseIBTSWork&lt;DIR, I, C>&#xA;where DIR:IForwardDirection&#xA;where I:IInstance&lt;C>&#xA;where C:IClass&#xA;{&#xA;&#xA;&#x9;#region data&#xA;&#x9;&#xA;&#x9;&#x9;protected int nx,ny,nz;&#xA;&#x9;&#x9;protected int north, south, east, west;&#xA;&#x9;&#x9;protected int ist,jst,iend,jend;&#xA;&#x9;&#x9;protected double [,,,] rsd,d;&#xA;&#xA;&#x9;&#x9;protected double[,,,] ldx;&#xA;&#x9;    protected double[,,,] ldy;&#xA;&#x9;    protected double[,,,] ldz;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;override public void initialize()&#xA;&#x9;&#x9;{            &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;nx = Blocks.nx;&#xA;&#x9;&#x9;&#x9;ny = Blocks.ny;&#xA;&#x9;&#x9;&#x9;nz = Blocks.nz;&#xA;            ist  = Blocks.ist;&#xA;            jst  = Blocks.jst;                &#xA;            iend = Blocks.iend;&#xA;            jend = Blocks.jend;&#xA;            &#xA;            rsd  = Problem.Field_rsd;&#xA;            d = Problem.Field_d;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;ldx = Problem.Field_c;&#xA;&#x9;&#x9;&#x9;ldy = Problem.Field_b;&#xA;&#x9;&#x9;&#x9;ldz = Problem.Field_a;&#xA;&#x9;&#x9;&#x9;&#xA;            X_buffer.Array = new double[5*(iend-ist+1)];&#xA;            Y_buffer.Array = new double[5*(jend-jst+1)];&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;override public void post_initialize()&#xA;&#x9;&#x9;{&#xA;            north = Y.predecessor;//Blocks.north;&#xA;            south = Y.successor;//Blocks.south;&#xA;            east  = X.successor;//Blocks.east;&#xA;            west  = X.predecessor;//Blocks.west;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;#endregion&#xA;&#xA;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#xA;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IBlocksInfo&lt;I,C> blocks = null;&#xA;&#xA;public IBlocksInfo&lt;I,C> Blocks {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.blocks == null)&#xA;&#x9;&#x9;&#x9;this.blocks = (IBlocksInfo&lt;I,C>) Services.getPort(&quot;blocks_info&quot;);&#xA;&#x9;&#x9;return this.blocks;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell y = null;&#xA;&#xA;public ICell Y {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.y == null)&#xA;&#x9;&#x9;&#x9;this.y = (ICell) Services.getPort(&quot;y&quot;);&#xA;&#x9;&#x9;return this.y;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell x = null;&#xA;&#xA;public ICell X {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.x == null)&#xA;&#x9;&#x9;&#x9;this.x = (ICell) Services.getPort(&quot;x&quot;);&#xA;&#x9;&#x9;return this.x;&#xA;&#x9;}&#xA;}&#xA;&#x9;&#x9;&#xA;private IBuffer x_buffer = null;&#xA;&#xA;public IBuffer X_buffer {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.x_buffer == null)&#xA;&#x9;&#x9;&#x9;this.x_buffer = (IBuffer) Services.getPort(&quot;x_buffer&quot;);&#xA;&#x9;&#x9;return this.x_buffer;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IBuffer y_buffer = null;&#xA;&#xA;public IBuffer Y_buffer {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.y_buffer == null)&#xA;&#x9;&#x9;&#x9;this.y_buffer = (IBuffer) Services.getPort(&quot;y_buffer&quot;);&#xA;&#x9;&#x9;return this.y_buffer;&#xA;&#x9;}&#xA;}&#xA;&#xA;private DIR direction = default(DIR);&#xA;&#xA;protected DIR Direction {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.direction == null)&#xA;&#x9;&#x9;&#x9;this.direction = (DIR) Services.getPort(&quot;direction&quot;);&#xA;&#x9;&#x9;return this.direction;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA; &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIBTSLowerWork.cs" srcType="base" uri="impl.lu.ssor.BlockLowerTriangularSolutionWFWork/bin/1.0.0.0/BaseIBTSLowerWork.dll" versionId="1.0.0.0">
          <dependency>lu.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>lu.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>lu.datapartition.BlocksInfo/bin/1.0.0.0/IBlocksInfo.dll</dependency>
          <dependency>common.Buffer/bin/1.0.0.0/IBuffer.dll</dependency>
          <dependency>common.direction.Direction/bin/1.0.0.0/IDirection.dll</dependency>
          <dependency>common.direction.Forward/bin/1.0.0.0/IForwardDirection.dll</dependency>
          <dependency>lu.ssor.BlockTriangularSolutionWFWork/bin/1.0.0.0/BaseIBTSWork.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using lu.problem_size.Instance;&#xA;using common.problem_size.Class;&#xA;using common.direction.Forward;&#xA;using lu.ssor.BlockTriangularSolutionWFWork;&#xA;&#xA;namespace impl.lu.ssor.BlockLowerTriangularSolutionWFWork { &#xA;&#xA;public class IBTSLowerWork&lt;DIR, I, C> : BaseIBTSLowerWork&lt;DIR, I, C>, IBTSWork&lt;DIR, I, C>&#xA;&#x9;where DIR:IForwardDirection&#xA;&#x9;where I:IInstance&lt;C>&#xA;&#x9;where C:IClass&#xA;{&#xA;&#x9;public override void main() &#xA;&#x9;{ &#xA;        int i, j, m;&#xA;        double  tmp, tmp1;&#xA;        double[,] tmat = new double[5, 5];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;//Console.WriteLine(&quot;BTS LOWER - n=&quot; + north + &quot; s=&quot; + south + &quot; e=&quot; + east + &quot; w=&quot; + west);&#xA;&#x9;&#x9;&#x9;&#xA;        readBuffer(rsd ,k);&#xA;&#x9;&#x9;&#xA;        for(j = jst; j&lt;= jend; j++) &#xA;&#x9;&#x9;{&#xA;            for(i = ist; i&lt;= iend; i++) &#xA;&#x9;&#x9;&#x9;{&#xA;                for(m = 1; m&lt;= 5; m++) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    rsd[k-1, j+1, i+1, m-1] =  rsd[k-1, j+1, i+1, m -1]&#xA;         - omega * (  ldz[j-1, i-1, 0, m-1] * rsd[k-2, j+1, i+1, 0]&#xA;                    + ldz[j-1, i-1, 1, m-1] * rsd[k-2, j+1, i+1, 1]&#xA;                    + ldz[j-1, i-1, 2, m-1] * rsd[k-2, j+1, i+1, 2]&#xA;                    + ldz[j-1, i-1, 3, m-1] * rsd[k-2, j+1, i+1, 3]&#xA;                    + ldz[j-1, i-1, 4, m-1] * rsd[k-2, j+1, i+1, 4]);&#xA;                }&#xA;            }&#xA;        }&#xA;&#x9;&#x9;&#xA;        for(j=jst; j&lt;=jend; j++) &#xA;&#x9;&#x9;{&#xA;            for(i = ist; i&lt;= iend; i++) &#xA;&#x9;&#x9;&#x9;{&#xA;                for(m = 1; m&lt;= 5; m++) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    rsd[k-1, j+1, i+1, m-1] =  rsd[k-1, j+1, i+1, m-1]&#xA;                    - omega * ( ldy[j-1, i-1, 0, m-1] * rsd[k-1, j, i+1, 0]&#xA;                              + ldx[j-1, i-1, 0, m-1] * rsd[k-1, j+1, i, 0]&#xA;                              + ldy[j-1, i-1, 1, m-1] * rsd[k-1, j, i+1, 1]&#xA;                              + ldx[j-1, i-1, 1, m-1] * rsd[k-1, j+1, i, 1]&#xA;                              + ldy[j-1, i-1, 2, m-1] * rsd[k-1, j, i+1, 2]&#xA;                              + ldx[j-1, i-1, 2, m-1] * rsd[k-1, j+1, i, 2]&#xA;                              + ldy[j-1, i-1, 3, m-1] * rsd[k-1, j, i+1, 3]&#xA;                              + ldx[j-1, i-1, 3, m-1] * rsd[k-1, j+1, i, 3]&#xA;                              + ldy[j-1, i-1, 4, m-1] * rsd[k-1, j, i+1, 4]&#xA;                              + ldx[j-1, i-1, 4, m-1] * rsd[k-1, j+1, i, 4]);&#xA;                }&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;                //---------------------------------------------------------------------&#xA;                //   diagonal block inversion&#xA;                //&#xA;                //   forward elimination&#xA;                //---------------------------------------------------------------------&#xA;&#x9;&#x9;&#x9;&#x9;for(m = 0; m&lt; 5; m++) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;                    tmat[0, m] = d[j-1, i-1, 0, m];&#xA;                    tmat[1, m] = d[j-1, i-1, 1, m];&#xA;                    tmat[2, m] = d[j-1, i-1, 2, m];&#xA;                    tmat[3, m] = d[j-1, i-1, 3, m];&#xA;                    tmat[4, m] = d[j-1, i-1, 4, m];&#xA;                }&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;                tmp1 = 1.0d /tmat[0, 0];&#xA;                tmp = tmp1 * tmat[0, 1];&#xA;                tmat[1, 1] =  tmat[1, 1] - tmp * tmat[1, 0];&#xA;                tmat[2, 1] =  tmat[2, 1] - tmp * tmat[2, 0];&#xA;                tmat[3, 1] =  tmat[3, 1] - tmp * tmat[3, 0];&#xA;                tmat[4, 1] =  tmat[4, 1] - tmp * tmat[4, 0];&#xA;                rsd[k-1, j+1, i+1, 1] = rsd[k-1, j+1, i+1, 1] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                tmp = tmp1 * tmat[0, 2];&#xA;                tmat[1, 2] =  tmat[1, 2] - tmp * tmat[1, 0];&#xA;                tmat[2, 2] =  tmat[2, 2] - tmp * tmat[2, 0];&#xA;                tmat[3, 2] =  tmat[3, 2] - tmp * tmat[3, 0];&#xA;                tmat[4, 2] =  tmat[4, 2] - tmp * tmat[4, 0];&#xA;                rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                tmp = tmp1 * tmat[0, 3];&#xA;                tmat[1, 3] =  tmat[1, 3] - tmp * tmat[1, 0];&#xA;                tmat[2, 3] =  tmat[2, 3] - tmp * tmat[2, 0];&#xA;                tmat[3, 3] =  tmat[3, 3] - tmp * tmat[3, 0];&#xA;                tmat[4, 3] =  tmat[4, 3] - tmp * tmat[4, 0];&#xA;                rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                tmp = tmp1 * tmat[0, 4];&#xA;                tmat[1, 4] =  tmat[1, 4] - tmp * tmat[1, 0];&#xA;                tmat[2, 4] =  tmat[2, 4] - tmp * tmat[2, 0];&#xA;                tmat[3, 4] =  tmat[3, 4] - tmp * tmat[3, 0];&#xA;                tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 0];&#xA;                rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 0] * tmp;&#xA;&#xA;                tmp1 = 1.0d /tmat[1, 1];&#xA;                tmp = tmp1 * tmat[1, 2];&#xA;                tmat[2, 2] =  tmat[2, 2] - tmp * tmat[2, 1];&#xA;                tmat[3, 2] =  tmat[3, 2] - tmp * tmat[3, 1];&#xA;                tmat[4, 2] =  tmat[4, 2] - tmp * tmat[4, 1];&#xA;                rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] - rsd[k-1, j+1, i+1, 1] * tmp;&#xA;&#xA;                tmp = tmp1 * tmat[1, 3];&#xA;                tmat[2, 3] =  tmat[2, 3] - tmp * tmat[2, 1];&#xA;                tmat[3, 3] =  tmat[3, 3] - tmp * tmat[3, 1];&#xA;                tmat[4, 3] =  tmat[4, 3] - tmp * tmat[4, 1];&#xA;                rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3] - rsd[k-1, j+1, i+1, 1] * tmp;&#xA;&#xA;                tmp = tmp1 * tmat[1, 4];&#xA;                tmat[2, 4] =  tmat[2, 4] - tmp * tmat[2, 1];&#xA;                tmat[3, 4] =  tmat[3, 4] - tmp * tmat[3, 1];&#xA;                tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 1];&#xA;                rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 1] * tmp;&#xA;&#xA;                tmp1 = 1.0d /tmat[2, 2];&#xA;                tmp = tmp1 * tmat[2, 3];&#xA;                tmat[3, 3] =  tmat[3, 3] - tmp * tmat[3, 2];&#xA;                tmat[4, 3] =  tmat[4, 3] - tmp * tmat[4, 2];&#xA;                rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3] - rsd[k-1, j+1, i+1, 2] * tmp;&#xA;&#xA;                tmp = tmp1 * tmat[2, 4];&#xA;                tmat[3, 4] =  tmat[3, 4] - tmp * tmat[3, 2];&#xA;                tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 2];&#xA;                rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 2] * tmp;&#xA;&#xA;                tmp1 = 1.0d /tmat[3, 3];&#xA;                tmp = tmp1 * tmat[3, 4];&#xA;                tmat[4, 4] =  tmat[4, 4] - tmp * tmat[4, 3];&#xA;                rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4] - rsd[k-1, j+1, i+1, 3] * tmp;&#xA;&#xA;                //---------------------------------------------------------------------&#xA;                //   back substitution&#xA;                //---------------------------------------------------------------------&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;rsd[k-1, j+1, i+1, 4] = rsd[k-1, j+1, i+1, 4]/ tmat[4, 4];&#xA;                rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3]- tmat[4, 3] * rsd[k-1, j+1, i+1, 4];&#xA;                rsd[k-1, j+1, i+1, 3] = rsd[k-1, j+1, i+1, 3]/ tmat[3, 3];&#xA;                rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] -tmat[3, 2] * rsd[k-1, j+1, i+1, 3] - tmat[4, 2] * &#xA;                                                                   rsd[k-1, j+1, i+1, 4];&#xA;                rsd[k-1, j+1, i+1, 2] = rsd[k-1, j+1, i+1, 2] /tmat[2, 2];&#xA;                rsd[k-1, j+1, i+1, 1] = rsd[k-1, j+1, i+1, 1]- tmat[2, 1] * rsd[k-1, j+1, i+1, 2]-tmat[3, 1]*&#xA;                                                                   rsd[k-1, j+1, i+1, 3]-tmat[4, 1]*&#xA;                                                                   rsd[k-1, j+1, i+1, 4];&#xA;                rsd[k-1, j+1, i+1, 1] = rsd[k-1, j+1, i+1, 1] /tmat[1, 1];&#xA;                rsd[k-1, j+1, i+1, 0] = rsd[k-1, j+1, i+1, 0] -tmat[1, 0] * rsd[k-1, j+1, i+1, 1]-&#xA;                                                       tmat[2, 0] * rsd[k-1, j+1, i+1, 2]-&#xA;                                                       tmat[3, 0] * rsd[k-1, j+1, i+1, 3]-&#xA;                                                       tmat[4, 0] * rsd[k-1, j+1, i+1, 4];&#xA;                rsd[k-1, j+1, i+1, 0] = rsd[k-1, j+1, i+1, 0] /tmat[0, 0];&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;        }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;writeBuffer(rsd, k);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9;} // end activate method&#xA;&#x9;&#xA;    private int k;&#xA;    private double omega;&#xA;&#x9;&#xA;&#x9;public void setParameters(int k, double omega)&#xA;&#x9;{&#xA;&#x9;   this.k     = k;&#xA;&#x9;   this.omega = omega;&#xA;&#x9;}&#x9;&#xA;&#xA;    // From IExchance10.cs&#x9;&#xA;&#x9;private void readBuffer(double[,,,] g, int k) &#xA;&#x9;{&#xA;&#x9;   int i, j, idx;&#xA;&#x9;&#xA;&#x9;    double[] dum1;&#xA;&#x9;    &#xA;&#x9;    if (north != -1)&#xA;&#x9;    {&#xA;&#x9;        dum1 = Y_buffer.Array;       &#xA;&#x9;        &#xA;&#x9;        idx = 0;&#xA;&#x9;        for(j=jst; j&lt;=jend; j++) &#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;            g[k-1, j+1, 1, 0] = dum1[0+idx];&#xA;&#x9;            g[k-1, j+1, 1, 1] = dum1[1+idx];&#xA;&#x9;            g[k-1, j+1, 1, 2] = dum1[2+idx];&#xA;&#x9;            g[k-1, j+1, 1, 3] = dum1[3+idx];&#xA;&#x9;            g[k-1, j+1, 1, 4] = dum1[4+idx];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;/*&#x9;&#x9;&#x9;&#x9;&#x9;if (this.GlobalRank == 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum1[0+idx] + &quot; &quot; + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum1[1+idx] + &quot; &quot; + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum1[2+idx] + &quot; &quot; + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum1[3+idx] + &quot; &quot; +&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum1[4+idx] &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;); */&#xA;&#x9;            idx = idx + 5;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;        }&#xA;&#x9;    }&#xA;       &#xA;        if (west != -1)&#xA;        {&#xA;&#x9;        dum1 = X_buffer.Array;&#xA;&#x9;       &#xA;&#x9;        idx = 0;&#xA;&#x9;        for(i=ist; i&lt;=iend; i++) &#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;            g[k-1, 1, i+1, 0] = dum1[0+idx];&#xA;&#x9;            g[k-1, 1, i+1, 1] = dum1[1+idx];&#xA;&#x9;            g[k-1, 1, i+1, 2] = dum1[2+idx];&#xA;&#x9;            g[k-1, 1, i+1, 3] = dum1[3+idx];&#xA;&#x9;            g[k-1, 1, i+1, 4] = dum1[4+idx];&#xA;&#x9;            idx = idx + 5;&#xA;&#x9;        }&#xA;        }&#xA;       &#xA;&#x9;}&#xA;&#x9; &#xA;&#x9;// From IExchange12.cs &#xA;&#x9;private void writeBuffer(double[,,,] g, int k) &#xA;&#x9;{&#xA;        int i, j, idx;&#xA;        double[] dum;&#xA;        &#xA;&#x9;    if (south != -1)&#xA;        {&#xA;&#x9;        dum = Y_buffer.Array;&#xA;&#x9;        &#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;$$$$$$&quot;);&#xA;&#x9;        idx = 0;&#xA;&#x9;        for(j=jst; j&lt;=jend; j++) &#xA;&#x9;        {&#xA;&#x9;            dum[0+idx] = g[k-1, j+1, nx+1, 0];&#xA;&#x9;            dum[1+idx] = g[k-1, j+1, nx+1, 1];&#xA;&#x9;            dum[2+idx] = g[k-1, j+1, nx+1, 2];&#xA;&#x9;            dum[3+idx] = g[k-1, j+1, nx+1, 3];&#xA;&#x9;            dum[4+idx] = g[k-1, j+1, nx+1, 4];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;/*&#x9;&#x9;&#x9;&#x9;&#x9;if (this.GlobalRank == 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum[0+idx] + &quot; &quot; + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum[1+idx] + &quot; &quot; + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum[2+idx] + &quot; &quot; + &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum[3+idx] + &quot; &quot; +&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;              dum[4+idx] &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;); */&#xA;&#x9;            idx = idx + 5;&#xA;&#x9;        }&#xA;        }&#xA;&#x9;   &#xA;&#x9;    if (east != -1)&#xA;        {&#xA;&#x9;        dum = X_buffer.Array;&#xA;&#x9;        &#xA;&#x9;        idx = 0;&#xA;&#x9;        for(i=ist; i&lt;=iend; i++) &#xA;&#x9;        {&#xA;&#x9;            dum[0+idx] = g[k-1, ny+1, i+1, 0];&#xA;&#x9;            dum[1+idx] = g[k-1, ny+1, i+1, 1];&#xA;&#x9;            dum[2+idx] = g[k-1, ny+1, i+1, 2];&#xA;&#x9;            dum[3+idx] = g[k-1, ny+1, i+1, 3];&#xA;&#x9;            dum[4+idx] = g[k-1, ny+1, i+1, 4];&#xA;&#x9;            idx = idx + 5;&#xA;&#x9;        }&#xA;        }&#xA;&#x9;}&#xA;&#x9;&#x9;&#xA;}&#xA;&#xA;}&#xA;&#xA;&#xA;" fileType="library" name="IBTSLowerWork.cs" srcType="user" uri="impl.lu.ssor.BlockLowerTriangularSolutionWFWork/bin/1.0.0.0/IBTSLowerWork.dll" versionId="1.0.0.0">
          <dependency>lu.problem_size.Instance/bin/1.0.0.0/IInstance.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.direction.Forward/bin/1.0.0.0/IForwardDirection.dll</dependency>
          <dependency>%WORKSPACE/impl.lu.ssor.BlockLowerTriangularSolutionWFWork/bin/1.0.0.0/BaseIBTSLowerWork.dll</dependency>
          <dependency>lu.ssor.BlockTriangularSolutionWFWork/bin/1.0.0.0/IBTSWork.dll</dependency>
        </file>
      </sources>
      <visualDescription h="89" w="165" x="70" y="37">
        <color b="144" g="238" r="144"/>
      </visualDescription>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="problem_data"/>
      </port>
      <port name="blocks_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="blocks_info" sRef="blocks_info"/>
      </port>
      <parameter iname="IForwardDirection" order="0" parid="direction" uname="forward" varid="DIR"/>
      <parameter iname="IInstance" order="1" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="2" parid="class" uname="class" varid="C"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IBTSLowerWork" multiple="true" private="false" replica="0" uRef="bts_work" visibleInterface="true">
      <super cRef="base" uRef="bts_work"/>
      <visualDescription h="40" w="89" x="9" y="172"/>
    </unit>
  </componentInfo>
</component:component>