<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000019adf4be323bafb823757d0c1902908c1736902efa77b9c1f8d958fb8786108f33f23e6a2fa62e02b64f1c438e09e94a5c3d5a7c86343d2627e8da6420200e80611b9d6ceb62c2563071cb03ba761ce30dc2896ee68279bfd2386f0f073ae28606ae8349c6b0625e7e08cdbccaf83911dd584b8fb86dd11f5513712fbf2a46a8" isAbstract="false" kind="Computation" name="ADIImpl" packagePath="impl.adi">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000dd6f94f214b6d1659a012fb3ddc528814778f5ade1d3b937126fd08c4f2f47edd74619f7aa00b43e3fd4b327c0b07aebd9157e6ea7fc153c4a6ba21ae7d63275f53f0be3d56e32799fe3160832718ea36cf5bba6279a1856621fb543b1fc1c4d2a814eecd959a78edac52a767457ac80bbf4cac3195dd1cad1d22dfa1770a3a5" localRef="base" location="adi.ADI/ADI.hpe" name="ADI" package="adi" version="1.0.0.0">
        <visualDescription h="30" w="168" x="179" y="373">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="method" varName="MTH"/>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="z" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="36" w="45" x="393" y="359">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="y" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="35" w="44" x="403" y="312">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="x" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="35" w="48" x="306" y="293">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000059fdc60f0095a1142aef66ff82b5e8659158d29c9ae6eedd576a96e33ae1faaddaf78b57c8cab897deeb79b165ed011c3cd25deeeed69da38fc30a1143e39fa67ab658c278a82203de07eafa3dafe7704a84c1fffc42035b92d09563efdfe7b59862d01f598f626efa5cd4eef962fb18970112f8a530495c2a482922a19258b" localRef="mpi" location="environment.MPIDirect/MPIDirect.hpe" multiple="false" name="MPIDirect" package="environment" exposed="true">
          <visualDescription h="30" w="50" x="383" y="485">
            <color b="240" g="32" r="160"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="mpi">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="cells_info" location="common.datapartition.MultiPartitionCells/MultiPartitionCells.hpe" multiple="true" name="MultiPartitionCells" package="common.datapartition" exposed="true">
          <visualDescription h="30" w="84" x="81" y="477">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="cells">
            <visualDescription h="10" w="10" x="49" y="8"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="adi.data.ProblemDefinition/ProblemDefinition.hpe" multiple="false" name="ProblemDefinition" package="adi.data" exposed="true">
          <visualDescription h="30" w="139" x="216" y="485">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds parallel="true" uRef="problem">
            <visualDescription h="10" w="10" x="8" y="21"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="adi">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" multiple="false" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="155" y="160">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000071d38687e0d5d2c316c5b3d07d8aa67134a4623aa2696b4c1af143b9dfb26a795943f7fad788e11c36c09b5001b5422f85c04f6580101d9e27cbf7d06c6cec1d87e42c3a8940336c5c2d63abadb4ac8c1519030710b5b087e1d7e415c91fe07522356c2184e3ea18bf6684dd71bda7b7e5e4411c6b9941ea98fa97bde5ccceb1" localRef="instance" location="common.problem_size.Instance/Instance.hpe" multiple="false" name="Instance" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="115" x="61" y="212">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds parallel="false" uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000065a583953c3587c1209979536e5ff1a80890361170dab29c31967996924e908f4dfcd7fd7c85921b08aa2193be1674aa220dbaafda9c081270f8248e0ef486f725d00c99c141ffefbc663fb868426326f477127eca49696e967b6c8203ada10b80b06758073be286f99f981981d314cf3ba20addb76983db1e155576d5e86c83" localRef="method" location="common.solve.SolvingMethod/SolvingMethod.hpe" multiple="false" name="SolvingMethod" package="common.solve" exposed="false">
      <visualDescription h="30" w="160" x="381" y="196">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <supplyParameter cRef="instance" varName="I"/>
    <interface iRef="IADIImpl" nArgs="3">
      <slice isRef="z_solve">
        <originRef cRef="z_solve" iRef="ISolver"/>
        <visualDescription h="10" w="10" x="64" y="28"/>
      </slice>
      <slice isRef="y_solve">
        <originRef cRef="y_solve" iRef="ISolver"/>
        <visualDescription h="10" w="10" x="64" y="15"/>
      </slice>
      <slice isRef="x_solve">
        <originRef cRef="x_solve" iRef="ISolver"/>
        <visualDescription h="10" w="10" x="63" y="3"/>
      </slice>
      <slice isRef="copy_faces">
        <originRef cRef="copy_faces" iRef="ICopyFaces"/>
        <visualDescription h="10" w="10" x="5" y="76"/>
      </slice>
      <slice isRef="compute_rhs">
        <originRef cRef="compute_rhs" iRef="IComputeRHS"/>
        <visualDescription h="10" w="10" x="20" y="55"/>
      </slice>
      <slice isRef="add">
        <originRef cRef="add" iRef="IAdd"/>
        <visualDescription h="10" w="10" x="40" y="43"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using common.datapartition.MultiPartitionCells;&#xA;using common.topology.Ring;&#xA;using adi.CopyFaces;&#xA;using common.problem_size.Class;&#xA;using adi.ComputeRHS;&#xA;using adi.Solver;&#xA;using common.axis.ZAxis;&#xA;using common.direction.Direction;&#xA;using environment.MPIDirect;&#xA;using common.axis.XAxis;&#xA;using common.axis.YAxis;&#xA;using adi.Add;&#xA;using adi.data.ProblemDefinition;&#xA;using adi.ADI;&#xA;using common.solve.SolvingMethod;&#xA;using common.problem_size.Instance;&#xA;&#xA;namespace impl.adi.ADIImpl { &#xA;&#xA;public abstract class BaseIADIImpl&lt;I, CLASS, MTH>: Computation, BaseIADI&lt;I, CLASS, MTH>&#xA;&#x9;where MTH:ISolvingMethod&#xA;&#x9;where CLASS:IClass&#xA;&#x9;where I:IInstance&lt;CLASS>&#xA;{&#xA;&#xA;private ICells cells_info = null;&#xA;&#xA;public ICells Cells_info {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.cells_info == null)&#xA;&#x9;&#x9;&#x9;this.cells_info = (ICells) Services.getPort(&quot;cells_info&quot;);&#xA;&#x9;&#x9;return this.cells_info;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell cell = null;&#xA;&#xA;public ICell Cell {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.cell == null)&#xA;&#x9;&#x9;&#x9;this.cell = (ICell) Services.getPort(&quot;topology&quot;);&#xA;&#x9;&#x9;return this.cell;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell x = null;&#xA;&#xA;public ICell X {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.x == null)&#xA;&#x9;&#x9;&#x9;this.x = (ICell) Services.getPort(&quot;x&quot;);&#xA;&#x9;&#x9;return this.x;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell z = null;&#xA;&#xA;public ICell Z {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.z == null)&#xA;&#x9;&#x9;&#x9;this.z = (ICell) Services.getPort(&quot;z&quot;);&#xA;&#x9;&#x9;return this.z;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICell y = null;&#xA;&#xA;public ICell Y {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.y == null)&#xA;&#x9;&#x9;&#x9;this.y = (ICell) Services.getPort(&quot;y&quot;);&#xA;&#x9;&#x9;return this.y;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ICopyFaces&lt;I, CLASS> copy_faces = null;&#xA;&#xA;protected ICopyFaces&lt;I, CLASS> Copy_faces {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.copy_faces == null)&#xA;&#x9;&#x9;&#x9;this.copy_faces = (ICopyFaces&lt;I, CLASS>) Services.getPort(&quot;copy_faces&quot;);&#xA;&#x9;&#x9;return this.copy_faces;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IComputeRHS&lt;I, CLASS> compute_rhs = null;&#xA;&#xA;protected IComputeRHS&lt;I, CLASS> Compute_rhs {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.compute_rhs == null)&#xA;&#x9;&#x9;&#x9;this.compute_rhs = (IComputeRHS&lt;I, CLASS>) Services.getPort(&quot;compute_rhs&quot;);&#xA;&#x9;&#x9;return this.compute_rhs;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ISolver&lt;I, CLASS, MTH, IZ> z_solve = null;&#xA;&#xA;protected ISolver&lt;I, CLASS, MTH, IZ> Z_solve {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.z_solve == null)&#xA;&#x9;&#x9;&#x9;this.z_solve = (ISolver&lt;I, CLASS, MTH, IZ>) Services.getPort(&quot;z_solve&quot;);&#xA;&#x9;&#x9;return this.z_solve;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IMPIDirect mpi = null;&#xA;&#xA;public IMPIDirect Mpi {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.mpi == null)&#xA;&#x9;&#x9;&#x9;this.mpi = (IMPIDirect) Services.getPort(&quot;mpi&quot;);&#xA;&#x9;&#x9;return this.mpi;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ISolver&lt;I, CLASS, MTH, IX> x_solve = null;&#xA;&#xA;protected ISolver&lt;I, CLASS, MTH, IX> X_solve {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.x_solve == null)&#xA;&#x9;&#x9;&#x9;this.x_solve = (ISolver&lt;I, CLASS, MTH, IX>) Services.getPort(&quot;x_solve&quot;);&#xA;&#x9;&#x9;return this.x_solve;&#xA;&#x9;}&#xA;}&#xA;&#xA;private ISolver&lt;I, CLASS, MTH, IY> y_solve = null;&#xA;&#xA;protected ISolver&lt;I, CLASS, MTH, IY> Y_solve {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.y_solve == null)&#xA;&#x9;&#x9;&#x9;this.y_solve = (ISolver&lt;I, CLASS, MTH, IY>) Services.getPort(&quot;y_solve&quot;);&#xA;&#x9;&#x9;return this.y_solve;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IAdd&lt;I, CLASS> add = null;&#xA;&#xA;protected IAdd&lt;I, CLASS> Add {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.add == null)&#xA;&#x9;&#x9;&#x9;this.add = (IAdd&lt;I, CLASS>) Services.getPort(&quot;add&quot;);&#xA;&#x9;&#x9;return this.add;&#xA;&#x9;}&#xA;}&#xA;&#xA;private IProblemDefinition&lt;I, CLASS> problem_data = null;&#xA;&#xA;public IProblemDefinition&lt;I, CLASS> Problem_data {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.problem_data == null)&#xA;&#x9;&#x9;&#x9;this.problem_data = (IProblemDefinition&lt;I, CLASS>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;return this.problem_data;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA; &#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIADIImpl.cs" srcType="base" uri="impl.adi.ADIImpl/bin/1.0.0.0/BaseIADIImpl.dll" versionId="1.0.0.0">
          <dependency>common.datapartition.MultiPartitionCells/bin/1.0.0.0/ICells.dll</dependency>
          <dependency>common.topology.Ring/bin/1.0.0.0/ICell.dll</dependency>
          <dependency>adi.CopyFaces/bin/1.0.0.0/ICopyFaces.dll</dependency>
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>adi.ComputeRHS/bin/1.0.0.0/IComputeRHS.dll</dependency>
          <dependency>bt.solve.Solve/bin/1.0.0.0/ISolve.dll</dependency>
          <dependency>common.axis.Z/bin/1.0.0.0/IZ.dll</dependency>
          <dependency>bt.solve.BTMethod/bin/1.0.0.0/IBTMethod.dll</dependency>
          <dependency>common.direction.Direction/bin/1.0.0.0/IDirection.dll</dependency>
          <dependency>environment.MPIDirect/bin/1.0.0.0/IMPIDirect.dll</dependency>
          <dependency>common.axis.XAxis/bin/1.0.0.0/IX.dll</dependency>
          <dependency>common.axis.Y/bin/1.0.0.0/IY.dll</dependency>
          <dependency>adi.Add/bin/1.0.0.0/IAdd.dll</dependency>
          <dependency>adi.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>bt.ADI/bin/1.0.0.0/BaseIADI.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using adi.ADI; &#xA;using common.problem_size.Class;&#xA;using common.solve.SolvingMethod;&#xA;using common.problem_size.Instance;&#xA;&#xA;namespace impl.adi.ADIImpl &#xA;{ &#xA;&#x9;public class IADIImpl&lt;I, CLASS, MTH> : BaseIADIImpl&lt;I, CLASS, MTH>, IADI&lt;I, CLASS, MTH>&#xA;&#x9;&#x9;where MTH:ISolvingMethod&#xA;&#x9;&#x9;where CLASS:IClass&#xA;&#x9;&#x9;where I:IInstance&lt;CLASS>&#xA;&#x9;{&#x9;&#xA;&#x9;   &#xA;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;if (Copy_faces.is_multiple()) &#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;   Copy_faces.go();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;Compute_rhs.go();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;X_solve.go();&#xA;&#x9;&#x9;&#x9;Y_solve.go();&#xA;&#x9;&#x9;&#x9;Z_solve.go();&#xA;&#x9;&#x9;&#x9;Add.go();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;} &#xA;&#x9;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="IADIImpl.cs" srcType="user" uri="impl.adi.ADIImpl/bin/1.0.0.0/IADIImpl.dll" versionId="1.0.0.0">
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>%WORKSPACE/impl.bt.ADI/bin/1.0.0.0/BaseIADIImpl.dll</dependency>
          <dependency>bt.ADI/bin/1.0.0.0/IADI.dll</dependency>
        </file>
      </sources>
      <visualDescription h="98" w="174" x="81" y="75">
        <color b="0" g="128" r="128"/>
      </visualDescription>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="z_solve"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="z_solve"/>
      </port>
      <port name="z">
        <visualDescription h="10" w="10" x="131" y="30"/>
        <slice pRef="topology" sRef="z_solve"/>
      </port>
      <port name="y">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="topology" sRef="y_solve"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="y_solve"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="y_solve"/>
      </port>
      <port name="x">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="topology" sRef="x_solve"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="x_solve"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="x_solve"/>
      </port>
      <port name="y">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="y" sRef="copy_faces"/>
      </port>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="copy_faces"/>
      </port>
      <port name="x">
        <visualDescription h="10" w="10" x="3" y="43"/>
        <slice pRef="x" sRef="copy_faces"/>
      </port>
      <port name="z">
        <visualDescription h="10" w="10" x="131" y="30"/>
        <slice pRef="z" sRef="copy_faces"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="copy_faces"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="copy_faces"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="compute_rhs"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="compute_rhs"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="add"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="add"/>
      </port>
      <parameter iname="IInstance" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <parameter iname="ISolvingMethod" order="2" parid="method" uname="method" varid="MTH"/>
      <action id="main">
        <protocol>
          <par id="main" repeat="false">
            <action>
              <alt repeat="true">
                <action>
                  <perform id="a" repeat="true" action_id="c" slice_id="b">
                    <visualDescription h="50" w="100" x="76" y="168"/>
                  </perform>
                </action>
                <action>
                  <perform repeat="false" action_id="y" slice_id="u">
                    <visualDescription h="50" w="100" x="178" y="160"/>
                  </perform>
                </action>
                <visualDescription h="176" w="231" x="67" y="112"/>
              </alt>
            </action>
            <action>
              <perform id="e" repeat="false" action_id="e" slice_id="w">
                <visualDescription h="50" w="100" x="703" y="168"/>
              </perform>
            </action>
            <action>
              <seq repeat="false">
                <action>
                  <perform repeat="false" action_id="c" slice_id="w">
                    <visualDescription h="50" w="100" x="396" y="105"/>
                  </perform>
                </action>
                <action>
                  <perform repeat="false" action_id="c" slice_id="w">
                    <visualDescription h="50" w="100" x="393" y="161"/>
                  </perform>
                </action>
                <action>
                  <perform id="yt" repeat="false" action_id="ppp" slice_id="o">
                    <visualDescription h="50" w="100" x="391" y="221"/>
                  </perform>
                </action>
                <visualDescription h="207" w="149" x="386" y="95"/>
              </seq>
            </action>
            <visualDescription h="300" w="833" x="53" y="46"/>
          </par>
        </protocol>
      </action>
    </interface>
    <unit iRef="IADIImpl" multiple="true" private="false" replica="0" uRef="adi" visibleInterface="true">
      <super cRef="base" uRef="adi"/>
      <visualDescription h="40" w="80" x="156" y="257"/>
    </unit>
  </componentInfo>
</component:component>