<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000081cbccc153bca563ea27689090886b9f2cc73e590a1cb2aaf627c9a2308a7ea904a6b2ccbb1fe5ac04bf536ac5bb12c7ca971a0f35a968bc3cc70695c9d0856c9eea1c4bcfd846404acab5f13268c9d5514dad2ee9db680f7f44c04dd861ec0595691d651d259a5f9569fcdc7b401ca39196a867a027151ebe481f2a7c356fb9" isAbstract="false" kind="Computation" name="ZSolver" packagePath="impl.bt.solve">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000000bae3da14fb48c0e99af6ebcd66876aed5437168f2dc689b6e0d613d75a6a6f0689686cee970b3836f4c73410ae0c283d47e11abd20757a350a39a15862c4330b86ee723dcf60e7920e684de4e739bc479de4b0199e152120feb41edff40762c4b236ca7306f2350bf1e2ec699bfdfff762d12aec77250844cb6bc822f0f0486" localRef="base" location="bt.solve.Solver/Solver.hpe" name="Solver" package="bt.solve" version="1.0.0.0">
        <visualDescription h="30" w="50" x="286" y="392">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="instance_type" varName="I"/>
        <parameter formFieldId="axis" varName="DIR"/>
        <parameter formFieldId="class" varName="C"/>
        <parameter formFieldId="method" varName="MTH"/>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000005b86e947f0c8ff58a018885f506e053867ca3d393fe1cd5e1ec93a51a743248bfe402f5db64de0f83584c891c751c5372e47815b771be3794141e0b3015a36de18d2d19e785500ed9eb00c8e374ef02a660d9fd575b434d9f216339ff6dd62602fa43a397fa0e12d50219bc7c0626be2392c1384f5b5211eecfe655385887eaa" localRef="iteration_control_forward" location="adi.solve.IterationControl/IterationControl.hpe" multiple="false" name="IterationControl" package="adi.solve" exposed="true">
          <visualDescription h="60" w="260" x="825" y="305">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="direction" varName="X###1349574699565"/>
          <unitBounds parallel="true" uRef="iteration_control">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000005b86e947f0c8ff58a018885f506e053867ca3d393fe1cd5e1ec93a51a743248bfe402f5db64de0f83584c891c751c5372e47815b771be3794141e0b3015a36de18d2d19e785500ed9eb00c8e374ef02a660d9fd575b434d9f216339ff6dd62602fa43a397fa0e12d50219bc7c0626be2392c1384f5b5211eecfe655385887eaa" localRef="iteration_control_backward" location="adi.solve.IterationControl/IterationControl.hpe" multiple="false" name="IterationControl" package="adi.solve" exposed="true">
          <visualDescription h="60" w="279" x="769" y="217">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="direction" varName="X###1349574699565"/>
          <unitBounds parallel="true" uRef="iteration_control">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000c90ba34c6d313b818aac11c636e470def5f587fff1cf51da772f229fa1a9a60a2d5a56c7f27473991211353d5bc4c0cdec5acc9a2cb24392dc07e20dad02de68c4525f09d59756dcec506d34934b5a1206f3e86894dd3215f99456e36e93f8eee349bf44a29a3e56f37f4c5ffaeee5b79060a8c9e6d31144c2739d08fb07b8b8" localRef="backsub_info" location="common.data.Field/Field.hpe" multiple="false" name="Field" package="common.data" exposed="true">
          <visualDescription h="60" w="145" x="161" y="552">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="field">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="002400000480000094000000060200000024000052534131000400001100000009b97ce4f3981d78e251ff90894751a2f19e3d7fcafeadee8da1cb93890a7d9ed59b4773f575afc0782c61b877ac17cea1ab4429bfd162c1bdff0b6c7fe9d07f8e9ccdcd219b58671c77cf6cfbada633e18309cb4c2e518fedeaa6aecf435a12dc4a18c8384c15d61dfab5a2056f58c2bcf936823b8d84a8c5cc5e25827a1598" localRef="problem_data" location="adi.data.ProblemDefinition/ProblemDefinition.hpe" multiple="false" name="ProblemDefinition" package="adi.data" exposed="true">
          <visualDescription h="32" w="93" x="410" y="393">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="instance_type" varName="I"/>
          <parameter formFieldId="class" varName="C"/>
          <unitBounds parallel="true" uRef="problem">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000cfe94b8926d4a7de4f70d204303375a68658c9c988f5e0ec7f1f3dce28b75501399411f8002d0637e06b03a2849ef779a22e26ae137759213f595fd13ccb5101bb6f07e7560df0d8b1beadc8dacecefd49c7844d298e78991b98dd4650ec7bf0b26716727a7bc437f39a5ccede87c7db6829de68c511abb9d0b4e3644bcf66ad" localRef="cells_info" location="common.datapartition.MultiPartitionCells/MultiPartitionCells.hpe" multiple="true" name="MultiPartitionCells" package="common.datapartition" exposed="true">
          <visualDescription h="30" w="87" x="112" y="409">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="cells">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000c90ba34c6d313b818aac11c636e470def5f587fff1cf51da772f229fa1a9a60a2d5a56c7f27473991211353d5bc4c0cdec5acc9a2cb24392dc07e20dad02de68c4525f09d59756dcec506d34934b5a1206f3e86894dd3215f99456e36e93f8eee349bf44a29a3e56f37f4c5ffaeee5b79060a8c9e6d31144c2739d08fb07b8b8" localRef="lhsc" location="common.data.Field/Field.hpe" multiple="false" name="Field" package="common.data" exposed="true">
          <visualDescription h="60" w="100" x="37" y="516">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="field">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009b5fdf9e2fd2e1d4c40d5d105e19369c7729126e13c1d35d7124531d9c4fa1a01ecb25564a9fc1e7175d98659a5280d86a339f77d53abc6eff4debf0c86ea2c480a3ffedb149923bba754c2bb0fb6117e2416acad5d23bebfe734b82b120e8ca3451465ce29e2c470da1b915836a5db31d0e17997a541c0f79ea1aed03990587" localRef="topology" location="common.topology.Ring/Ring.hpe" multiple="false" name="Ring" package="common.topology" exposed="true">
          <visualDescription h="29" w="80" x="356" y="463">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="cell">
            <visualDescription h="10" w="10" x="63" y="6"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000059fdc60f0095a1142aef66ff82b5e8659158d29c9ae6eedd576a96e33ae1faaddaf78b57c8cab897deeb79b165ed011c3cd25deeeed69da38fc30a1143e39fa67ab658c278a82203de07eafa3dafe7704a84c1fffc42035b92d09563efdfe7b59862d01f598f626efa5cd4eef962fb18970112f8a530495c2a482922a19258b" localRef="mpi" location="environment.MPIDirect/MPIDirect.hpe" multiple="false" name="MPIDirect" package="environment" exposed="true">
          <visualDescription h="30" w="50" x="223" y="466">
            <color b="240" g="32" r="160"/>
          </visualDescription>
          <unitBounds parallel="true" uRef="mpi">
            <visualDescription h="10" w="10" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="solve">
          <visualDescription h="10" w="10" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000bf53b0511383425a287205701028bd02468fc3d7e016187e316b324317e52a13e4ef0306034cc0f1612eac77c8c89171d233ab624d7f88cf7617781ea97fa7fcba7539b5065ba46eeb6fa2c58d5cc8c4bac53ea60ddac7bab5ad64d967540e78947590eeb466137ff49b1db9e8e77e8207f5e253a70d62b1914edf8cbfcfc0a4" localRef="instance_type" location="bt.problem_size.Instance_BT/Instance_BT.hpe" multiple="false" name="Instance_BT" package="bt.problem_size" exposed="false">
      <visualDescription h="71" w="139" x="129" y="139">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="class" varName="C"/>
      <unitBounds parallel="false" uRef="instance">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000237f437b205f7bfa00c2d0b40167897c37f84c96a62c077e2832a5360fa8c1c7438dfa969d99bb36a48a7baefcbd50d84ae2e3e71a349dce24c2b0bc473997871be48fdb29d0d48b0928ca968440c6b6663c6740810dab7b664db0e0cfbfe5b21f223402d0d9bd601294898724b6a1da46e78261ef1ee37ac63ca9b2dbdc0d90" localRef="class" location="common.problem_size.Class/Class.hpe" multiple="false" name="Class" package="common.problem_size" exposed="false">
      <visualDescription h="30" w="50" x="626" y="166">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="class">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000003bb781674ea675f3e73d687d81c2a1fc30c172ba4dc5abb7591c0493b3e0f7a440be50941862ce7b3d1d6a7d57a55f20f8929f9f272be575cb8c2735e6faaeb2aa7c8b4cdc19e0c763e7a660a9c4cce5993fd57a435000e7717204249b8b85fac784054d914d6776215ae09ebe843efcc400849f526412b1a2b2209ff2903ce" localRef="axis" location="common.axis.ZAxis/ZAxis.hpe" multiple="false" name="ZAxis" package="common.axis" exposed="false">
      <visualDescription h="50" w="119" x="483" y="241">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="z">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="002400000480000094000000060200000024000052534131000400001100000025529ab026e77dd546c5f94e76127e76d2c281e7bdedc252d61f6953b04f54d154593621b2aef59dcd634eb5fd324c6e2ad6536ac74f2cdeb85f88c97805cf25c77d65ca931e199c09fa9424a481585529fd2e43b58709ac4c948c2b5b81be648a3f130bd9795324dc2c04a3d5143030b3afa496239772cd9f2e7d3d9a599082" localRef="method" location="bt.solve.BTMethod/BTMethod.hpe" multiple="false" name="BTMethod" package="bt.solve" exposed="false">
      <visualDescription h="30" w="50" x="378" y="306">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="method">
        <visualDescription h="10" w="10" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="class" varName="C"/>
    <supplyParameter cRef="axis" varName="DIR"/>
    <supplyParameter cRef="method" varName="MTH"/>
    <supplyParameter cRef="instance_type" varName="I"/>
    <interface iRef="IZSolverImpl" nArgs="4">
      <slice isRef="back_substitute">
        <originRef cRef="back_substitute" iRef="IBackSubstitute"/>
        <visualDescription h="10" w="10" x="6" y="57"/>
      </slice>
      <slice isRef="solve_cell">
        <originRef cRef="solve_cell" iRef="ISolverCell"/>
        <visualDescription h="10" w="10" x="20" y="60"/>
      </slice>
      <slice isRef="shift_lr">
        <originRef cRef="shift_lr" iRef="IShift"/>
        <visualDescription h="10" w="10" x="34" y="57"/>
      </slice>
      <slice isRef="pack_back_sub_info">
        <originRef cRef="pack_back_sub_info" iRef="IPackBackSubInfo"/>
        <visualDescription h="10" w="10" x="68" y="3"/>
      </slice>
      <slice isRef="pack_solve_info">
        <originRef cRef="pack_solve_info" iRef="IPackSolveInfo"/>
        <visualDescription h="10" w="10" x="83" y="12"/>
      </slice>
      <slice isRef="unpack_back_sub_info">
        <originRef cRef="unpack_back_sub_info" iRef="IUnpackBackSubInfo"/>
        <visualDescription h="10" w="10" x="94" y="26"/>
      </slice>
      <slice isRef="unpack_solve_info">
        <originRef cRef="unpack_solve_info" iRef="IUnpackSolveInfo"/>
        <visualDescription h="10" w="10" x="95" y="37"/>
      </slice>
      <slice isRef="shift_rl">
        <originRef cRef="shift_rl" iRef="IShift"/>
        <visualDescription h="10" w="10" x="109" y="55"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using adi.data.ProblemDefinition;&#xA;using bt.problem_size.Instance_BT;&#xA;using common.problem_size.Class;&#xA;using common.Buffer;&#xA;using bt.solve.BackSubstitute;&#xA;using common.axis.ZAxis;&#xA;using bt.solve.BTMethod;&#xA;using common.interactionpattern.Shift;&#xA;using common.direction.Forward;&#xA;using bt.solve.UnpackSolveInfo;&#xA;using bt.solve.SolverCell;&#xA;using common.direction.Backward;&#xA;using environment.MPIDirect;&#xA;using bt.solve.PackBackSubInfo;&#xA;using common.datapartition.MultiPartitionCells;&#xA;using common.topology.Ring;&#xA;using bt.solve.PackSolveInfo;&#xA;using bt.solve.UnpackBackSubInfo;&#xA;using bt.solve.Solver;&#xA;using adi.solve.IterationControl;&#xA;&#xA;&#xA;namespace impl.bt.solve.ZSolver { &#xA;&#x9;public abstract class BaseIZSolverImpl&lt;I, C, MTH, DIR>: Computation, BaseIBTSolver&lt;I, C, MTH, DIR>&#xA;&#x9;where I:IInstance_BT&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;where DIR:IZ&#xA;&#x9;where MTH:IBTMethod {&#xA;&#x9;&#x9;#region data&#xA;&#x9;&#x9;&#x9;protected int KMAX, JMAX, IMAX, ncells, MAX_CELL_DIM, maxcells;&#xA;&#x9;&#x9;&#x9;protected int[,] slice, cell_coord;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;override public void initialize(){&#xA;&#x9;&#x9;&#x9;&#x9;KMAX = Problem.KMAX;&#xA;&#x9;&#x9;&#x9;&#x9;JMAX = Problem.JMAX;&#xA;&#x9;&#x9;&#x9;&#x9;IMAX = Problem.IMAX;&#xA;&#x9;&#x9;&#x9;&#x9;ncells = Problem.NCells;&#xA;&#x9;&#x9;&#x9;&#x9;maxcells = Problem.maxcells;&#xA;&#x9;&#x9;&#x9;&#x9;MAX_CELL_DIM = Problem.MAX_CELL_DIM;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;            slice = Cells.cell_slice;&#xA;&#x9;            cell_coord = Cells.cell_coord;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;#endregion&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IIterationControl&lt;IForwardDirection> iteration_control_forward = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IIterationControl&lt;IForwardDirection> Iteration_control_forward {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.iteration_control_forward == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.iteration_control_forward = (IIterationControl&lt;IForwardDirection>) Services.getPort(&quot;iteration_control_forward&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.iteration_control_forward;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IIterationControl&lt;IBackwardDirection> iteration_control_backward = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IIterationControl&lt;IBackwardDirection> Iteration_control_backward {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.iteration_control_backward == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.iteration_control_backward = (IIterationControl&lt;IBackwardDirection>) Services.getPort(&quot;iteration_control_backward&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.iteration_control_backward;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IProblemDefinition&lt;I, C> problem = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IProblemDefinition&lt;I, C> Problem {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.problem == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.problem = (IProblemDefinition&lt;I, C>) Services.getPort(&quot;problem_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.problem;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IBuffer input_buffer = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IBuffer Input_buffer {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_buffer == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_buffer = (IBuffer) Services.getPort(&quot;input_buffer&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_buffer;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IBuffer output_buffer = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IBuffer Output_buffer {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_buffer == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_buffer = (IBuffer) Services.getPort(&quot;output_buffer&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_buffer;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IBackSubstitute&lt;I, C, DIR, MTH> back_substitute = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IBackSubstitute&lt;I, C, DIR, MTH> Back_substitute {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.back_substitute == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.back_substitute = (IBackSubstitute&lt;I, C, DIR, MTH>) Services.getPort(&quot;back_substitute&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.back_substitute;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IShift&lt;IForwardDirection> shift_lr = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IShift&lt;IForwardDirection> Shift_lr {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.shift_lr == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.shift_lr = (IShift&lt;IForwardDirection>) Services.getPort(&quot;shift_lr&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.shift_lr;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IUnpackSolveInfo&lt;I, C, DIR, MTH> unpack_solve_info = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IUnpackSolveInfo&lt;I, C, DIR, MTH> Unpack_solve_info {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.unpack_solve_info == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.unpack_solve_info = (IUnpackSolveInfo&lt;I, C, DIR, MTH>) Services.getPort(&quot;unpack_solve_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.unpack_solve_info;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ISolverCell&lt;I, C, DIR, MTH> solve_cell = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected ISolverCell&lt;I, C, DIR, MTH> Solve_cell {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.solve_cell == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.solve_cell = (ISolverCell&lt;I, C, DIR, MTH>) Services.getPort(&quot;solve_cell&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.solve_cell;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IShift&lt;IBackwardDirection> shift_rl = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IShift&lt;IBackwardDirection> Shift_rl {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.shift_rl == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.shift_rl = (IShift&lt;IBackwardDirection>) Services.getPort(&quot;shift_rl&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.shift_rl;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IMPIDirect mpi = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public IMPIDirect Mpi {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.mpi == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.mpi = (IMPIDirect) Services.getPort(&quot;mpi&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.mpi;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IPackBackSubInfo&lt;I, C, DIR, MTH> pack_back_sub_info = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IPackBackSubInfo&lt;I, C, DIR, MTH> Pack_back_sub_info {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.pack_back_sub_info == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.pack_back_sub_info = (IPackBackSubInfo&lt;I, C, DIR, MTH>) Services.getPort(&quot;pack_back_sub_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.pack_back_sub_info;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ICells cells = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public ICells Cells {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.cells == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.cells = (ICells) Services.getPort(&quot;cells_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.cells;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private ICell cell = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public ICell Cell {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.cell == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.cell = (ICell) Services.getPort(&quot;topology&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.cell;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IPackSolveInfo&lt;I, C, DIR, MTH> pack_solve_info = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IPackSolveInfo&lt;I, C, DIR, MTH> Pack_solve_info {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.pack_solve_info == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.pack_solve_info = (IPackSolveInfo&lt;I, C, DIR, MTH>) Services.getPort(&quot;pack_solve_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.pack_solve_info;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private IUnpackBackSubInfo&lt;I, C, DIR, MTH> unpack_back_sub_info = null;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;protected IUnpackBackSubInfo&lt;I, C, DIR, MTH> Unpack_back_sub_info {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.unpack_back_sub_info == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.unpack_back_sub_info = (IUnpackBackSubInfo&lt;I, C, DIR, MTH>) Services.getPort(&quot;unpack_back_sub_info&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.unpack_back_sub_info;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;abstract public int go(); &#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIZSolverImpl.cs" srcType="base" uri="impl.bt.solve.ZSolver/bin/1.0.0.0/BaseIZSolverImpl.dll" versionId="1.0.0.0">
          <dependency>adi.data.ProblemDefinition/bin/1.0.0.0/IProblemDefinition.dll</dependency>
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.Buffer/bin/1.0.0.0/IBuffer.dll</dependency>
          <dependency>bt.solve.BackSubstitute/bin/1.0.0.0/IBackSubstitute.dll</dependency>
          <dependency>common.axis.ZAxis/bin/1.0.0.0/IZ.dll</dependency>
          <dependency>bt.solve.BTMethod/bin/1.0.0.0/IBTMethod.dll</dependency>
          <dependency>common.interactionpattern.Shift/bin/1.0.0.0/IShift.dll</dependency>
          <dependency>common.direction.LeftToRight/bin/1.0.0.0/ILeftToRight.dll</dependency>
          <dependency>bt.solve.UnpackSolveInfo/bin/1.0.0.0/IUnpackSolveInfo.dll</dependency>
          <dependency>bt.solve.SolveCell/bin/1.0.0.0/ISolveCell.dll</dependency>
          <dependency>common.direction.RightToLeft/bin/1.0.0.0/IRightToLeft.dll</dependency>
          <dependency>environment.MPIDirect/bin/1.0.0.0/IMPIDirect.dll</dependency>
          <dependency>bt.solve.PackBackSubInfo/bin/1.0.0.0/IPackBackSubInfo.dll</dependency>
          <dependency>common.datapartition.MultiPartitionCells/bin/1.0.0.0/ICells.dll</dependency>
          <dependency>common.topology.Ring/bin/1.0.0.0/ICell.dll</dependency>
          <dependency>bt.solve.PackSolveInfo/bin/1.0.0.0/IPackSolveInfo.dll</dependency>
          <dependency>bt.solve.UnpackBackSubInfo/bin/1.0.0.0/IUnpackBackSubInfo.dll</dependency>
          <dependency>bt.solve.Solve/bin/1.0.0.0/BaseISolve.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using bt.problem_size.Instance_BT;&#xA;using common.problem_size.Class;&#xA;using common.axis.ZAxis;&#xA;using bt.solve.BTMethod;&#xA;using bt.solve.Solver;&#xA;&#xA;namespace impl.bt.solve.ZSolver &#xA;{ &#xA;&#x9;public class IZSolverImpl&lt;I, C, MTH, DIR> : BaseIZSolverImpl&lt;I, C, MTH, DIR>, IBTSolver&lt;I, C, MTH, DIR>&#xA;&#x9;where I:IInstance_BT&lt;C>&#xA;&#x9;where C:IClass&#xA;&#x9;where DIR:IZ&#xA;&#x9;where MTH:IBTMethod &#xA;&#x9;{&#xA;&#x9;&#x9;private double[][] in_buffer_solver;&#xA;&#x9;&#x9;private double[][] out_buffer_solver;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private void create_buffers_solvers()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;    in_buffer_solver = new double[2][];&#xA;&#x9;&#x9;&#x9;out_buffer_solver = new double[2][];&#xA;&#x9;&#x9;&#x9;int buffer_size;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;buffer_size = MAX_CELL_DIM * MAX_CELL_DIM * (5 * 5 + 5);&#xA;&#x9;&#x9;&#x9;in_buffer_solver[0] = new double[buffer_size];&#xA;&#x9;&#x9;&#x9;out_buffer_solver[0] = new double[buffer_size];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;buffer_size = MAX_CELL_DIM * MAX_CELL_DIM * 5;&#xA;&#x9;&#x9;&#x9;in_buffer_solver[1] = new double[buffer_size];&#xA;&#x9;&#x9;&#x9;out_buffer_solver[1] = new double[buffer_size];&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private bool buffers_ok = false;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;public override int go() &#xA;        {&#x9;&#x9;    &#xA;&#x9;&#x9;&#x9;if (!buffers_ok)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;this.create_buffers_solvers();&#xA;&#x9;&#x9;&#x9;&#x9;buffers_ok = true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;//int c, stage, first, last;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Input_buffer.Array = out_buffer_solver[0] ;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Iteration_control_forward.start();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;        Solve_cell.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;while (!Iteration_control_forward.is_last_stage())&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;        Output_buffer.Array = in_buffer_solver[0]; // new double[buffer_size];&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Pack_solve_info.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Shift_lr.initiate_send();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;Iteration_control_forward.advance();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Shift_lr.initiate_recv();&#xA;&#x9;&#x9;        Shift_lr.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Unpack_solve_info.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Solve_cell.go();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Iteration_control_forward.end();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Input_buffer.Array = out_buffer_solver[1]; // new double[buffer_size];&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Iteration_control_backward.start();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Back_substitute.go();&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;while (!Iteration_control_backward.is_first_stage())&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;        Output_buffer.Array = in_buffer_solver[1]; // new double[buffer_size];&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Pack_back_sub_info.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Shift_rl.initiate_send();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;Iteration_control_backward.advance();&#xA;&#x9;&#x9;&#x9;        &#xA;&#x9;&#x9;&#x9;    Shift_rl.initiate_recv();&#xA;&#x9;&#x9;        Shift_rl.go();&#x9;&#x9;        &#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Unpack_back_sub_info.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;        Back_substitute.go();&#x9;&#x9;&#x9;    &#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Iteration_control_backward.end ();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;return 0;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IZSolverImpl.cs" srcType="user" uri="impl.bt.solve.ZSolver/bin/1.0.0.0/IZSolverImpl.dll" versionId="1.0.0.0">
          <dependency>bt.problem_size.Instance_BT/bin/1.0.0.0/IInstance_BT.dll</dependency>
          <dependency>common.problem_size.Class/bin/1.0.0.0/IClass.dll</dependency>
          <dependency>common.axis.ZAxis/bin/1.0.0.0/IZ.dll</dependency>
          <dependency>bt.solve.BTMethod/bin/1.0.0.0/IBTMethod.dll</dependency>
          <dependency>%WORKSPACE/impl.bt.solve.ZSolver/bin/1.0.0.0/BaseIZSolverImpl.dll</dependency>
          <dependency>bt.solve.Solve/bin/1.0.0.0/ISolve.dll</dependency>
        </file>
      </sources>
      <visualDescription h="74" w="114" x="121" y="107">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <port name="backsub_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="backsub_info" sRef="back_substitute"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="back_substitute"/>
      </port>
      <port name="iteration_control_backward">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="iteration_control" sRef="back_substitute"/>
      </port>
      <port name="lhsc">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="lhsc" sRef="back_substitute"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="back_substitute"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="solve_cell"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="solve_cell"/>
      </port>
      <port name="lhsc">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="lhsc" sRef="solve_cell"/>
      </port>
      <port name="iteration_control_forward">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="iteration_control" sRef="solve_cell"/>
      </port>
      <port name="input_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="input_buffer" sRef="shift_lr"/>
      </port>
      <port name="topology">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="topology" sRef="shift_lr"/>
      </port>
      <port name="output_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="output_buffer" sRef="shift_lr"/>
      </port>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="shift_lr"/>
      </port>
      <port name="iteration_control_backward">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="iteration_control" sRef="pack_back_sub_info"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="pack_back_sub_info"/>
      </port>
      <port name="output_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="buffer" sRef="pack_back_sub_info"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="pack_back_sub_info"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="pack_solve_info"/>
      </port>
      <port name="iteration_control_forward">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="iteration_control" sRef="pack_solve_info"/>
      </port>
      <port name="output_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="buffer" sRef="pack_solve_info"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="pack_solve_info"/>
      </port>
      <port name="lhsc">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="lhsc" sRef="pack_solve_info"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="unpack_back_sub_info"/>
      </port>
      <port name="backsub_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="backsub_info" sRef="unpack_back_sub_info"/>
      </port>
      <port name="input_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="buffer" sRef="unpack_back_sub_info"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="unpack_back_sub_info"/>
      </port>
      <port name="iteration_control_backward">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="iteration_control" sRef="unpack_back_sub_info"/>
      </port>
      <port name="cells_info">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="cells_info" sRef="unpack_solve_info"/>
      </port>
      <port name="lhsc">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="lhsc" sRef="unpack_solve_info"/>
      </port>
      <port name="input_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="buffer" sRef="unpack_solve_info"/>
      </port>
      <port name="iteration_control_forward">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="iteration_control" sRef="unpack_solve_info"/>
      </port>
      <port name="problem_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="problem_data" sRef="unpack_solve_info"/>
      </port>
      <port name="topology">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="topology" sRef="shift_rl"/>
      </port>
      <port name="input_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="input_buffer" sRef="shift_rl"/>
      </port>
      <port name="output_buffer">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="output_buffer" sRef="shift_rl"/>
      </port>
      <port name="mpi">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="mpi" sRef="shift_rl"/>
      </port>
      <parameter iname="IInstance_BT" order="0" parid="instance_type" uname="instance" varid="I"/>
      <parameter iname="IClass" order="1" parid="class" uname="class" varid="C"/>
      <parameter iname="IBTMethod" order="2" parid="method" uname="method" varid="MTH"/>
      <parameter iname="IZ" order="3" parid="axis" uname="z" varid="DIR"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IZSolverImpl" multiple="true" private="false" replica="0" uRef="solve" visibleInterface="true">
      <super cRef="base" uRef="solve"/>
      <visualDescription h="53" w="80" x="242" y="300"/>
    </unit>
  </componentInfo>
</component:component>